import { tags } from "typia";

import { IECommunityPlatformCommentSort } from "./IECommunityPlatformCommentSort";

/**
 * Comment entity mapped to Prisma table community_platform_comments.
 *
 * Represents a user-authored comment that belongs to a post and may optionally
 * reply to another comment. This type excludes internal lifecycle fields (e.g.,
 * deleted_at) from public responses.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformComment = {
  /**
   * Primary key (UUID) of the comment.
   *
   * Prisma: community_platform_comments.id
   */
  id: string & tags.Format<"uuid">;

  /**
   * Container post identifier (UUID) to which this comment belongs.
   *
   * Prisma: community_platform_comments.community_platform_post_id →
   * references community_platform_posts.id
   */
  community_platform_post_id: string & tags.Format<"uuid">;

  /**
   * Author user's identifier (UUID) who created this comment.
   *
   * Prisma: community_platform_comments.community_platform_user_id →
   * references community_platform_users.id
   */
  community_platform_user_id: string & tags.Format<"uuid">;

  /**
   * Optional parent comment identifier (UUID) for nested threading.
   *
   * Null indicates a top-level comment.
   *
   * Prisma: community_platform_comments.parent_id (self-reference).
   */
  parent_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Plain-text body of the comment.
   *
   * Business constraints from Prisma schema comments: 2–2,000 characters;
   * plain text with line breaks only (no scripts or executable code).
   *
   * Prisma: community_platform_comments.content
   */
  content: string & tags.MinLength<2> & tags.MaxLength<2000>;

  /**
   * Creation timestamp of the comment (UTC).
   *
   * Prisma: community_platform_comments.created_at
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update timestamp of the comment (UTC).
   *
   * Prisma: community_platform_comments.updated_at
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ICommunityPlatformComment {
  /**
   * Sort order for comment collections.
   *
   * Per business rules and Prisma commentary for comments, collections are
   * ordered by Newest (created_at descending with deterministic tie-breakers
   * by identifier when timestamps match).
   */
  export type ISort = "Newest";

  /**
   * Request body for creating a comment.
   *
   * Security note: Actor identity (author user) and container context (post
   * or parent comment via path) are derived from authentication and route
   * parameters. Do not supply user IDs in requests.
   */
  export type ICreate = {
    /**
     * Plain-text comment content.
     *
     * Business constraints per Prisma commentary: 2–2,000 characters; line
     * breaks allowed; no scripts/executable code.
     */
    content: string & tags.MinLength<2> & tags.MaxLength<2000>;

    /**
     * Optional parent comment identifier (UUID) when creating a reply.
     *
     * Null or omission indicates a top-level comment under the target post
     * path context.
     */
    parent_id?: (string & tags.Format<"uuid">) | null | undefined;
  };

  /**
   * Request parameters for listing/searching comments.
   *
   * Notes:
   *
   * - Avoid direct actor/user ID filters in request bodies per security
   *   guidance; use scope-specific endpoints or boolean flags when needed.
   * - Sorting uses the canonical Newest definition for comments: created_at
   *   DESC with deterministic tie-breakers by identifier.
   * - Pagination defaults target 20 items per page unless otherwise configured.
   */
  export type IRequest = {
    /** Page number for pagination (uint32 semantics). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /**
     * Number of records per page (uint32 semantics). Default is 20 by
     * business rules.
     */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /**
     * Free-text search query against comment content. Must be at least 2
     * characters to execute search (per business rules).
     */
    query?: (string & tags.MinLength<2>) | undefined;

    /** Optional post scope filter (UUID of community_platform_posts.id). */
    post_id?: (string & tags.Format<"uuid">) | undefined;

    /** Optional parent comment filter to fetch replies of a given parent. */
    parent_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** When true, include only top-level comments (parent_id = null). */
    top_level_only?: boolean | undefined;

    /** Filter for comments created at or after this timestamp (UTC). */
    since?: (string & tags.Format<"date-time">) | undefined;

    /** Filter for comments created at or before this timestamp (UTC). */
    until?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Sorting strategy for returned comments. Comments use Newest ordering
     * by specification.
     */
    sort?: IECommunityPlatformCommentSort | undefined;
  };

  /**
   * Request body to update a comment’s editable fields.
   *
   * Security: Only the author may perform this edit per business rules. Do
   * not allow changing ownership or relational identifiers
   * (post/user/parent). All fields are optional for partial updates.
   */
  export type IUpdate = {
    /**
     * New plain-text content for the comment.
     *
     * Prisma: community_platform_comments.content — business rule 2–2,000
     * characters; plain text with line breaks only.
     */
    content?: (string & tags.MinLength<2> & tags.MaxLength<2000>) | undefined;
  };

  /**
   * Summary type for comment entities sourced from Prisma model
   * community_platform_comments.
   *
   * For list/search views, this includes essential public fields only:
   * identifiers, author/post linkage, optional parent threading reference,
   * plain-text content (with enforced length constraints), and timestamps.
   */
  export type ISummary = {
    /**
     * Primary Key.
     *
     * Maps to Prisma column community_platform_comments.id.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Post association identifier.
     *
     * References community_platform_posts.id via
     * community_platform_comments.community_platform_post_id.
     */
    community_platform_post_id: string & tags.Format<"uuid">;

    /**
     * Author association identifier.
     *
     * References community_platform_users.id via
     * community_platform_comments.community_platform_user_id.
     */
    community_platform_user_id: string & tags.Format<"uuid">;

    /**
     * Optional parent comment identifier for nested threading.
     *
     * Maps to community_platform_comments.parent_id (nullable).
     */
    parent_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Plain-text comment content for display.
     *
     * Business rules: 2–2,000 characters; plain text with line breaks only
     * (no scripts/executable code). Maps to Prisma column
     * community_platform_comments.content.
     */
    content: string & tags.MinLength<2> & tags.MaxLength<2000>;

    /**
     * Creation timestamp (UTC, ISO 8601).
     *
     * Maps to community_platform_comments.created_at. Used for Newest
     * sorting and relative-time display.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Last update timestamp (UTC, ISO 8601).
     *
     * Maps to community_platform_comments.updated_at. Updated when the
     * comment content changes and for audit/versioning behaviors.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
