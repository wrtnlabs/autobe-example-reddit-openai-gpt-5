import { tags } from "typia";

import { IECommunityPlatformReservedTermOrderBy } from "./IECommunityPlatformReservedTermOrderBy";
import { IESortDirection } from "./IESortDirection";

/**
 * Reserved term entity used to block specific names/identifiers.
 *
 * This schema corresponds to Prisma model community_platform_reserved_terms. It
 * contains the original term, its normalized variant for case-insensitive
 * uniqueness, target context via applies_to, active flag, and lifecycle
 * timestamps. Use this type for administrative/reference views and validation
 * tooling.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformReservedTerm = {
  /**
   * Primary key.
   *
   * Prisma: community_platform_reserved_terms.id (UUID).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Original reserved term entered by an administrator.
   *
   * Prisma: community_platform_reserved_terms.term. Used for display and
   * reference.
   */
  term: string;

  /**
   * Case-normalized form of the term for case-insensitive matching.
   *
   * Prisma: community_platform_reserved_terms.term_normalized. Application
   * logic maintains this value.
   */
  term_normalized: string;

  /**
   * Context to which this reservation applies (e.g., "community_name",
   * "global").
   *
   * Prisma: community_platform_reserved_terms.applies_to.
   */
  applies_to: string;

  /**
   * Optional administrative note explaining why the term is reserved.
   *
   * Prisma: community_platform_reserved_terms.reason.
   */
  reason?: string | null | undefined;

  /**
   * Whether the reservation is currently enforced.
   *
   * Prisma: community_platform_reserved_terms.active.
   */
  active: boolean;

  /**
   * Creation timestamp of this reserved term record.
   *
   * Prisma: community_platform_reserved_terms.created_at.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update timestamp of this reserved term record.
   *
   * Prisma: community_platform_reserved_terms.updated_at.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp (null when active).
   *
   * Prisma: community_platform_reserved_terms.deleted_at. Read-only lifecycle
   * marker used to exclude records from public views.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ICommunityPlatformReservedTerm {
  /**
   * Ordering directive for reserved term listings.
   *
   * Pairs an allowed order_by column with an explicit order_dir to produce
   * deterministic results.
   */
  export type ISort = {
    /**
     * Column to order reserved terms by.
     *
     * Allowed values map to Prisma columns on
     * community_platform_reserved_terms: created_at, term, term_normalized,
     * applies_to.
     */
    order_by: IECommunityPlatformReservedTermOrderBy;

    /** Sort direction for the ordered column (ascending or descending). */
    order_dir: IESortDirection;
  };

  /**
   * Request parameters for listing/searching reserved terms (Prisma:
   * community_platform_reserved_terms).
   *
   * Contains safe, public filters and pagination. Does not accept actor IDs
   * or sensitive values.
   */
  export type IRequest = {
    /** Page number (1-based). See IPageI.IRequest for semantics. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Items per page. See IPageI.IRequest for semantics. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /**
     * Free-text search against term or term_normalized (Prisma:
     * community_platform_reserved_terms.term, term_normalized).
     *
     * Minimum length 2 characters per search rules.
     */
    query?: (string & tags.MinLength<2>) | null | undefined;

    /**
     * Context filter (e.g., 'community_name', 'global').
     *
     * Prisma: community_platform_reserved_terms.applies_to.
     */
    applies_to?: string | null | undefined;

    /**
     * Filter by active flag. Prisma:
     * community_platform_reserved_terms.active.
     */
    active?: boolean | null | undefined;

    /**
     * Sort key. Defaults commonly to created_at.
     *
     * Backed by Prisma columns created_at, term, applies_to.
     */
    sort_by?: "created_at" | "term" | "applies_to" | null | undefined;

    /** Sort direction; ascending or descending. */
    sort_dir?: "asc" | "desc" | null | undefined;
  };

  /**
   * Reserved term summary for administrative list views.
   *
   * Summarizes key fields from Prisma table community_platform_reserved_terms
   * for quick review and filtering. It avoids long-form fields like reason
   * and term_normalized to keep the payload concise while providing essential
   * auditability and filtering attributes.
   */
  export type ISummary = {
    /**
     * Unique identifier of the reserved term.
     *
     * Maps to community_platform_reserved_terms.id (UUID primary key).
     */
    id: string & tags.Format<"uuid">;

    /**
     * Original reserved term as entered by an administrator.
     *
     * Corresponds to community_platform_reserved_terms.term and is used for
     * display and validation previews.
     */
    term: string;

    /**
     * Target context to which this reservation applies (e.g.,
     * 'community_name', 'global').
     *
     * Maps to community_platform_reserved_terms.applies_to and scopes where
     * the term is enforced.
     */
    applies_to: string;

    /**
     * Whether enforcement of this reserved term is currently active.
     *
     * Based on community_platform_reserved_terms.active. Inactive terms are
     * retained for history or future reactivation.
     */
    active: boolean;

    /**
     * Creation timestamp of this reserved term (ISO 8601 date-time).
     *
     * Maps to community_platform_reserved_terms.created_at and supports
     * chronological sorting/filtering.
     */
    created_at: string & tags.Format<"date-time">;
  };
}
