import { tags } from "typia";

import { IVoteState } from "./IVoteState";

/**
 * Response payload after setting or clearing a vote on a comment.
 *
 * Aggregates are computed from Prisma models
 * Comments.community_platform_comment_votes and
 * Comments.community_platform_comments. Sensitive authentication or credential
 * data is never included.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformCommentVoteOutcome = {
  /**
   * Identifier of the comment whose vote outcome is reported.
   *
   * References Comments.community_platform_comments.id (UUID primary key).
   */
  commentId: string & tags.Format<"uuid">;

  /**
   * Computed score for the comment after applying the vote.
   *
   * Score is defined as upvotes minus downvotes and is derived from
   * community_platform_comment_votes where deleted_at IS NULL.
   */
  score: number & tags.Type<"int32">;

  /**
   * The callerâ€™s effective vote state on this comment after the operation.
   *
   * One of {NONE, UPVOTE, DOWNVOTE} reflecting the current state.
   */
  myVote: IVoteState;
};
