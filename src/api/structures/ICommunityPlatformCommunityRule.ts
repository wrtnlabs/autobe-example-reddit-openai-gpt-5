import { tags } from "typia";

import { IECommunityPlatformCommunityRuleSortBy } from "./IECommunityPlatformCommunityRuleSortBy";
import { IESortOrder } from "./IESortOrder";

/**
 * Community Rule item backed by Communities.community_platform_community_rules.
 *
 * This public representation omits internal relational keys
 * (community_platform_community_id) and soft-deletion flags (deleted_at),
 * focusing on ordered text content and audit timestamps.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformCommunityRule = {
  /**
   * Rule identifier (Communities.community_platform_community_rules.id).
   *
   * Opaque UUID unique within the system.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Display order within the community
   * (Communities.community_platform_community_rules.order_index).
   *
   * Starts at 1 and increases without gaps by convention; used to render the
   * top 5 rules.
   */
  orderIndex: number & tags.Type<"int32"> & tags.Minimum<1>;

  /**
   * Rule content (Communities.community_platform_community_rules.text).
   *
   * Concise text rendered in the "Community Rules" box; long values may be
   * truncated in UI.
   */
  text: string & tags.MaxLength<100>;

  /**
   * Timestamp when the rule was created
   * (Communities.community_platform_community_rules.created_at).
   */
  createdAt: string & tags.Format<"date-time">;

  /**
   * Timestamp when the rule was last updated
   * (Communities.community_platform_community_rules.updated_at).
   */
  updatedAt: string & tags.Format<"date-time">;
};
export namespace ICommunityPlatformCommunityRule {
  /**
   * Create payload for a community rule.
   *
   * Only user-editable business fields are accepted. Identifiers, timestamps,
   * and deletion flags are system-managed and excluded from this DTO.
   */
  export type ICreate = {
    /**
     * Display order for the new rule within the community.
     *
     * Prisma mapping:
     * Communities.community_platform_community_rules.order_index (Int).
     * Must be unique per community.
     */
    order: number & tags.Type<"int32"> & tags.Minimum<1>;

    /**
     * Rule text to display (≈ ≤ 100 chars).
     *
     * Prisma mapping: Communities.community_platform_community_rules.text
     * (text).
     */
    text: string & tags.MinLength<1> & tags.MaxLength<100>;
  };

  /**
   * Array of community rule create inputs.
   *
   * Provides a named schema to avoid inline array definitions for
   * ICommunityPlatformCommunityRule.ICreate.
   */
  export type ICreateArray = ICommunityPlatformCommunityRule.ICreate[];

  /**
   * Search, filter, sorting, and cursor-based pagination parameters for
   * listing a community’s rule items.
   *
   * Backed by Communities.community_platform_community_rules. Default
   * user-facing presentation orders by order_index ascending for the
   * Community Info + Rules section.
   */
  export type IRequest = {
    /**
     * Opaque cursor token for deterministic continuation based on the
     * active sort key.
     *
     * Used to fetch the next page of rules without duplicates or omissions.
     */
    cursor?: string | undefined;

    /**
     * Maximum number of items per page.
     *
     * Defaults to 20 when omitted. The upper bound protects backend
     * resources.
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /**
     * Ordering key for listing rules.
     *
     * - Order: uses
     *   Communities.community_platform_community_rules.order_index
     * - CreatedAt: uses
     *   Communities.community_platform_community_rules.created_at
     */
    sortBy?: IECommunityPlatformCommunityRuleSortBy | undefined;

    /** Sort direction to apply to the selected sortBy field (asc or desc). */
    order?: IESortOrder | undefined;

    /**
     * Optional text filter applied to rule text.
     *
     * Backed by a trigram index on
     * Communities.community_platform_community_rules.text for efficient
     * contains-like queries.
     */
    q?: (string & tags.MinLength<1>) | undefined;
  };

  /**
   * Update DTO for a Community Rule.
   *
   * All fields are optional (Partial pattern). Immutable properties such as
   * id, community linkage, and timestamps are not included. Use null
   * explicitly to clear optional fields if business logic allows; otherwise,
   * omit.
   */
  export type IUpdate = {
    /**
     * New display order within the community’s rules list. When provided,
     * must be ≥ 1 and unique per community.
     *
     * Prisma mapping:
     * Communities.community_platform_community_rules.order_index (Int).
     */
    order?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /**
     * Updated rule text (≈ ≤ 100 chars). Plain text only.
     *
     * Prisma mapping: Communities.community_platform_community_rules.text
     * (text).
     */
    text?: (string & tags.MaxLength<100>) | null | undefined;
  };
}
