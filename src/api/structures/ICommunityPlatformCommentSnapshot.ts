import { tags } from "typia";

import { IECommentSnapshotOrderBy } from "./IECommentSnapshotOrderBy";
import { IEOrderDirection } from "./IEOrderDirection";

/**
 * Comment snapshot entity capturing point-in-time versions of a comment’s
 * content and parent linkage.
 *
 * This schema corresponds to Prisma model community_platform_comment_snapshots.
 * Each record references the source comment and stores the exact content and
 * parent_id at the moment of change. The table is append-oriented and supports
 * audit/history views.
 *
 * Security note: Response-safe; contains no secret or credential properties.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformCommentSnapshot = {
  /**
   * Primary key of the comment snapshot.
   *
   * Prisma column: community_platform_comment_snapshots.id
   */
  id: string & tags.Format<"uuid">;

  /**
   * Identifier of the source comment this snapshot belongs to.
   *
   * Prisma column:
   * community_platform_comment_snapshots.community_platform_comment_id
   */
  community_platform_comment_id: string & tags.Format<"uuid">;

  /**
   * Point-in-time plain-text content captured by the snapshot.
   *
   * Business rule from PRD: comments are 2–2,000 characters and plain text.
   *
   * Prisma column: community_platform_comment_snapshots.content
   */
  content: string & tags.MinLength<2> & tags.MaxLength<2000>;

  /**
   * Parent comment identifier captured at snapshot time (if any). Historical
   * value; may not match current thread structure.
   *
   * Prisma column: community_platform_comment_snapshots.parent_id
   */
  parent_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Snapshot creation timestamp (represents the content’s timepoint).
   *
   * Prisma column: community_platform_comment_snapshots.created_at
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Administrative update timestamp for the snapshot record (typically equals
   * created_at as snapshots are append-only).
   *
   * Prisma column: community_platform_comment_snapshots.updated_at
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp for the snapshot record. Null when active.
   *
   * Prisma column: community_platform_comment_snapshots.deleted_at
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ICommunityPlatformCommentSnapshot {
  /**
   * Request parameters for listing comment snapshots.
   *
   * This request type is used by history/list endpoints to page through
   * community_platform_comment_snapshots. It supports standard pagination
   * (page, limit), ordering (orderBy, direction), and optional created_at
   * range filters (created_from/created_to). The parent resource identifier
   * is provided by the path parameter in API operations and is therefore not
   * repeated here.
   *
   * Security note: This is a request DTO only and does not accept actor/user
   * identifiers; the authenticated context is derived from session middleware
   * per platform security rules.
   */
  export type IRequest = {
    /**
     * Page number for pagination.
     *
     * Default aligns with platform pagination practices (e.g., first page =
     * 1).
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Maximum number of items per page (1–200).
     *
     * Business default for history views is commonly 20.
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<200>)
      | undefined;

    /**
     * Column to sort snapshots by. Default is created_at for chronological
     * history views.
     */
    orderBy?: IECommentSnapshotOrderBy | undefined;

    /**
     * Sort direction (ascending or descending). Default is desc for
     * newest-first history.
     */
    direction?: IEOrderDirection | undefined;

    /**
     * Filter snapshots with created_at greater than or equal to this
     * timestamp (UTC). Optional.
     */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Filter snapshots with created_at less than or equal to this timestamp
     * (UTC). Optional.
     */
    created_to?: (string & tags.Format<"date-time">) | undefined;
  };
}
