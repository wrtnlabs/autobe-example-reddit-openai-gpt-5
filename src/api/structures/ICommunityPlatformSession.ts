import { tags } from "typia";

import { IECommunityPlatformSessionStatus } from "./IECommunityPlatformSessionStatus";
import { IECommunityPlatformSessionSort } from "./IECommunityPlatformSessionSort";
import { IEOrderDirection } from "./IEOrderDirection";

/**
 * Authentication session entity derived from Prisma
 * Sessions.community_platform_sessions.
 *
 * This DTO intentionally omits sensitive data such as hashed_token and any
 * plaintext token material. It provides device hints (userAgent, ip,
 * clientPlatform, clientDevice) and lifecycle timestamps (createdAt, updatedAt,
 * lastSeenAt, expiresAt, revokedAt) suitable for account session-management
 * UIs.
 *
 * All timestamp properties use ISO-8601 (UTC) formatting consistent with
 * API-wide conventions.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformSession = {
  /**
   * Unique identifier of the session
   * (Sessions.community_platform_sessions.id).
   *
   * Generated by the system when a session is created and used to manage
   * device/session-specific actions (inspection and revocation).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Creation timestamp (Sessions.community_platform_sessions.created_at).
   *
   * Used for audit trails and relative time rendering in session management
   * UIs.
   */
  createdAt: string & tags.Format<"date-time">;

  /**
   * Last update timestamp (Sessions.community_platform_sessions.updated_at).
   *
   * Updated when server-side metadata is changed (e.g., client hints) or
   * lifecycle transitions occur.
   */
  updatedAt: string & tags.Format<"date-time">;

  /**
   * Timestamp of the last authenticated activity
   * (Sessions.community_platform_sessions.last_seen_at).
   *
   * Supports long-lived sessions and activity-based insights. Optional when
   * the session has not yet recorded activity after creation.
   */
  lastSeenAt?: (string & tags.Format<"date-time">) | undefined;

  /**
   * Absolute expiration timestamp
   * (Sessions.community_platform_sessions.expires_at).
   *
   * Aligns with long-session rules (idle timeout and absolute lifetime) and
   * determines when a session must be refreshed or re-authenticated.
   */
  expiresAt: string & tags.Format<"date-time">;

  /**
   * Revocation timestamp (Sessions.community_platform_sessions.revoked_at).
   *
   * When present, the session is considered invalid for future requests.
   * Exposed for transparency in session-management UIs.
   */
  revokedAt?: (string & tags.Format<"date-time">) | undefined;

  /**
   * Client user agent hint (Sessions.community_platform_sessions.user_agent).
   *
   * A free-form string captured at sign-in or subsequent interactions to help
   * users identify their sessions (e.g., a browser/OS signature).
   */
  userAgent?: string | undefined;

  /**
   * Last observed client IP address
   * (Sessions.community_platform_sessions.ip).
   *
   * Stored as a string to accommodate IPv4/IPv6 textual forms. Provided for
   * security visibility subject to privacy policy.
   */
  ip?: string | undefined;

  /**
   * Optional client platform hint
   * (Sessions.community_platform_sessions.client_platform).
   *
   * Examples include a brief OS/Browser summary. Intended for ease of use in
   * account security UIs.
   */
  clientPlatform?: string | undefined;

  /**
   * Optional client device descriptor
   * (Sessions.community_platform_sessions.client_device).
   *
   * Can store a model name or category to help users recognize devices (e.g.,
   * "MacBook Pro", "Pixel 7").
   */
  clientDevice?: string | undefined;

  /**
   * Logical session type (Sessions.community_platform_sessions.session_type).
   *
   * Application-defined value to differentiate flavors of sessions (e.g.,
   * "standard", "admin-console").
   */
  sessionType?: string | undefined;
};
export namespace ICommunityPlatformSession {
  /**
   * Request DTO for listing/searching authentication sessions from Prisma
   * table community_platform_sessions.
   *
   * Supports lifecycle filtering (active/revoked/expired), typed session
   * filtering, time-window filters, deterministic sorting, and cursor-based
   * pagination.
   *
   * Prisma table reference: community_platform_sessions — Authentication
   * sessions for the community platform.
   */
  export type IRequest = {
    /**
     * Session lifecycle filter.
     *
     * - Active: revoked_at is null AND now < expires_at
     * - Revoked: revoked_at is not null
     * - Expired: now >= expires_at
     * - All: do not filter by lifecycle
     */
    status?: IECommunityPlatformSessionStatus | undefined;

    /**
     * Optional logical type tag to filter sessions (e.g., "standard",
     * "admin-console").
     *
     * Prisma reference: community_platform_sessions.session_type.
     */
    session_type?: string | undefined;

    /**
     * Lower bound filter for session creation time (inclusive).
     *
     * Prisma reference: community_platform_sessions.created_at.
     */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Upper bound filter for session creation time (inclusive).
     *
     * Prisma reference: community_platform_sessions.created_at.
     */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Lower bound filter for last authenticated activity (inclusive).
     *
     * Prisma reference: community_platform_sessions.last_seen_at.
     */
    last_seen_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Upper bound filter for last authenticated activity (inclusive).
     *
     * Prisma reference: community_platform_sessions.last_seen_at.
     */
    last_seen_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Lower bound filter for absolute expiration (inclusive).
     *
     * Prisma reference: community_platform_sessions.expires_at.
     */
    expires_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Upper bound filter for absolute expiration (inclusive).
     *
     * Prisma reference: community_platform_sessions.expires_at.
     */
    expires_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Primary sort key to order sessions for management views. Default is
     * last_seen_at when present, else created_at.
     */
    sort_by?: IECommunityPlatformSessionSort | undefined;

    /**
     * Sort direction for the chosen key (asc|desc). Default desc for
     * recent-first views.
     */
    order?: IEOrderDirection | undefined;

    /**
     * Opaque cursor encoding the last item’s ordering tuple for
     * continuation (e.g., last_seen_at + id, or created_at + id).
     */
    cursor?: string | undefined;

    /** Maximum number of sessions to return. Defaults to 20. */
    limit?:
      | (number &
          tags.Type<"int32"> &
          tags.Default<20> &
          tags.Minimum<1> &
          tags.Maximum<100>)
      | undefined;
  };

  /**
   * Authentication session summary.
   *
   * Represents a safe, non-sensitive view of a user’s long-lived
   * authentication session stored in the Prisma model
   * “community_platform_sessions”. The schema intentionally omits secret
   * materials such as hashed_token while providing lifecycle and device hints
   * suitable for session management UIs.
   *
   * Used for listings or compact displays of sessions, enabling users and
   * admins to identify devices and session states without exposing sensitive
   * token data.
   */
  export type ISummary = {
    /**
     * Primary key of the session.
     *
     * Prisma table: community_platform_sessions.id.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Identifier of the user who owns this session.
     *
     * Prisma relation:
     * community_platform_sessions.community_platform_user_id →
     * community_platform_users.id.
     */
    userId: string & tags.Format<"uuid">;

    /**
     * Client user agent string captured at sign-in or last interaction for
     * device identification.
     *
     * Prisma column: community_platform_sessions.user_agent.
     */
    userAgent?: string | null | undefined;

    /**
     * Last observed client IP address (text form, supports IPv4/IPv6).
     *
     * Prisma column: community_platform_sessions.ip.
     */
    ip?: string | null | undefined;

    /**
     * Optional client platform hint (e.g., OS/Browser summary).
     *
     * Prisma column: community_platform_sessions.client_platform.
     */
    clientPlatform?: string | null | undefined;

    /**
     * Optional device descriptor (e.g., model or category).
     *
     * Prisma column: community_platform_sessions.client_device.
     */
    clientDevice?: string | null | undefined;

    /**
     * Logical session type if used by the application (e.g., "standard",
     * "admin-console").
     *
     * Prisma column: community_platform_sessions.session_type.
     */
    sessionType?: string | null | undefined;

    /**
     * Session creation timestamp used for relative time displays and audit
     * trails.
     *
     * Prisma column: community_platform_sessions.created_at.
     */
    createdAt: string & tags.Format<"date-time">;

    /**
     * Last updated timestamp for session metadata.
     *
     * Prisma column: community_platform_sessions.updated_at.
     */
    updatedAt: string & tags.Format<"date-time">;

    /**
     * Timestamp of the last authenticated activity for this session.
     *
     * Prisma column: community_platform_sessions.last_seen_at.
     */
    lastSeenAt?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Absolute expiration timestamp to satisfy long-lived session
     * constraints.
     *
     * Prisma column: community_platform_sessions.expires_at.
     */
    expiresAt: string & tags.Format<"date-time">;

    /**
     * Timestamp when the session was revoked. Null indicates the session
     * has not been explicitly revoked.
     *
     * Prisma column: community_platform_sessions.revoked_at.
     */
    revokedAt?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Soft deletion timestamp for retention and compliance workflows.
     *
     * Prisma column: community_platform_sessions.deleted_at.
     */
    deletedAt?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Computed convenience flag indicating whether the session is currently
     * active.
     *
     * Typically true when revokedAt is null, expiresAt is in the future,
     * and deletedAt is null. This is a derived field, not stored in the
     * database.
     */
    isActive?: boolean | undefined;
  };
}
