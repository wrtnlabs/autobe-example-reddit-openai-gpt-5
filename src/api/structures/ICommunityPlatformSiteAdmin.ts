import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";
import { IECommunityPlatformSiteAdminSort } from "./IECommunityPlatformSiteAdminSort";
import { IEOrderDirection } from "./IEOrderDirection";

/**
 * Administrator role assignment entity for SiteAdmin privileges.
 *
 * Represents a row in the Prisma model community_platform_siteadmins and links
 * to community_platform_users via community_platform_user_id. It records grant
 * and optional revocation timestamps for audit, while excluding sensitive
 * account credentials. This DTO is suitable for administrative tools and read
 * responses where site-wide privileges need to be inspected.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformSiteAdmin = {
  /**
   * Primary key of the administrator role assignment.
   *
   * Prisma mapping: community_platform_siteadmins.id (UUID).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Identifier of the user who holds the administrator role.
   *
   * Prisma mapping: community_platform_siteadmins.community_platform_user_id
   * → community_platform_users.id.
   */
  userId: string & tags.Format<"uuid">;

  /**
   * Timestamp indicating when admin privileges were granted.
   *
   * Prisma mapping: community_platform_siteadmins.granted_at.
   */
  grantedAt: string & tags.Format<"date-time">;

  /**
   * Timestamp when admin privileges were revoked; null indicates the grant is
   * currently active.
   *
   * Prisma mapping: community_platform_siteadmins.revoked_at (nullable).
   */
  revokedAt?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Creation timestamp for audit and ordering.
   *
   * Prisma mapping: community_platform_siteadmins.created_at.
   */
  createdAt: string & tags.Format<"date-time">;

  /**
   * Last update timestamp for audit.
   *
   * Prisma mapping: community_platform_siteadmins.updated_at.
   */
  updatedAt: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp for visibility control and retention workflows
   * (if used).
   *
   * Prisma mapping: community_platform_siteadmins.deleted_at (nullable).
   */
  deletedAt?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ICommunityPlatformSiteAdmin {
  /**
   * Authorization response for Site Administrator operations.
   *
   * Conforms to the standard IAuthorized contract: includes the authenticated
   * entity id and the IAuthorizationToken. The admin profile is provided for
   * client convenience without exposing sensitive columns (e.g.,
   * password_hash).
   */
  export type IAuthorized = {
    /**
     * Identifier of the authenticated administrator’s user account.
     *
     * Prisma column: community_platform_users.id.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Identifier of the user who holds the administrator role.
     *
     * Prisma mapping:
     * community_platform_siteadmins.community_platform_user_id →
     * community_platform_users.id.
     */
    userId: string & tags.Format<"uuid">;

    /**
     * Timestamp indicating when admin privileges were granted.
     *
     * Prisma mapping: community_platform_siteadmins.granted_at.
     */
    grantedAt: string & tags.Format<"date-time">;

    /**
     * Timestamp when admin privileges were revoked; null indicates the
     * grant is currently active.
     *
     * Prisma mapping: community_platform_siteadmins.revoked_at (nullable).
     */
    revokedAt?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Creation timestamp for audit and ordering.
     *
     * Prisma mapping: community_platform_siteadmins.created_at.
     */
    createdAt: string & tags.Format<"date-time">;

    /**
     * Last update timestamp for audit.
     *
     * Prisma mapping: community_platform_siteadmins.updated_at.
     */
    updatedAt: string & tags.Format<"date-time">;

    /**
     * Soft deletion timestamp for visibility control and retention
     * workflows (if used).
     *
     * Prisma mapping: community_platform_siteadmins.deleted_at (nullable).
     */
    deletedAt?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;

    /**
     * Administrator profile details derived from
     * Actors.community_platform_users and
     * Actors.community_platform_siteadmins.
     *
     * Contains only non-sensitive fields.
     */
    admin?: ICommunityPlatformSiteAdmin | undefined;
  };

  /**
   * Request DTO for listing/searching Site Administrator assignments from
   * Prisma table community_platform_siteadmins.
   *
   * Supports filtering by user, active status (revoked vs active),
   * grant/revocation windows, deterministic sorting, and cursor-based
   * pagination.
   *
   * Prisma table reference: community_platform_siteadmins — Role assignment
   * table granting administrative privileges to a community_platform_users
   * account.
   */
  export type IRequest = {
    /**
     * Filter by administrator account (community_platform_users.id).
     *
     * Prisma reference:
     * community_platform_siteadmins.community_platform_user_id —
     * Administrator account's community_platform_users.id.
     */
    community_platform_user_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * When true, return only currently active admin grants (revoked_at is
     * null and deleted_at is null). When false, include historical grants
     * as well.
     */
    active_only?: boolean | undefined;

    /**
     * Lower bound filter for grant time (inclusive).
     *
     * Prisma reference: community_platform_siteadmins.granted_at.
     */
    granted_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Upper bound filter for grant time (inclusive).
     *
     * Prisma reference: community_platform_siteadmins.granted_at.
     */
    granted_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Lower bound filter for revocation time (inclusive). Only meaningful
     * when active_only is false.
     *
     * Prisma reference: community_platform_siteadmins.revoked_at.
     */
    revoked_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Upper bound filter for revocation time (inclusive). Only meaningful
     * when active_only is false.
     *
     * Prisma reference: community_platform_siteadmins.revoked_at.
     */
    revoked_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Primary sort key for deterministic ordering. Default is granted_at
     * with descending order and id desc tie-break.
     */
    sort_by?: IECommunityPlatformSiteAdminSort | undefined;

    /** Sort direction for the chosen sort key. */
    order?: IEOrderDirection | undefined;

    /**
     * Opaque cursor encoding the last item’s ordering tuple for stable
     * continuation (e.g., granted_at + id).
     */
    cursor?: string | undefined;

    /** Maximum number of records to return. Defaults to 20. */
    limit?:
      | (number &
          tags.Type<"int32"> &
          tags.Default<20> &
          tags.Minimum<1> &
          tags.Maximum<100>)
      | undefined;
  };

  /**
   * Site administrator assignment summary.
   *
   * This schema represents a compact view of an administrative role grant
   * stored in the Prisma model “community_platform_siteadmins”. It includes
   * only non-sensitive, business-facing fields required for listing or
   * summarizing administrator assignments, such as the assignment id, the
   * user it belongs to, and the grant and lifecycle timestamps.
   *
   * Use this summary where management grids or audit lists need to render who
   * has site-wide privileges without loading full detail objects. Sensitive
   * credential data is never exposed.
   */
  export type ISummary = {
    /**
     * Primary key of the administrator role assignment.
     *
     * Prisma table: community_platform_siteadmins.id.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Identifier of the owning user account to whom administrator
     * privileges are granted.
     *
     * Prisma relation:
     * community_platform_siteadmins.community_platform_user_id →
     * community_platform_users.id.
     */
    userId: string & tags.Format<"uuid">;

    /**
     * Timestamp when administrative privileges were granted to the user.
     *
     * Prisma column: community_platform_siteadmins.granted_at.
     */
    grantedAt: string & tags.Format<"date-time">;

    /**
     * Timestamp when administrative privileges were revoked. Null indicates
     * a currently active admin grant.
     *
     * Prisma column: community_platform_siteadmins.revoked_at.
     */
    revokedAt?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Creation timestamp for the admin assignment record used for audit and
     * ordering.
     *
     * Prisma column: community_platform_siteadmins.created_at.
     */
    createdAt: string & tags.Format<"date-time">;

    /**
     * Last update timestamp for this admin assignment record.
     *
     * Prisma column: community_platform_siteadmins.updated_at.
     */
    updatedAt: string & tags.Format<"date-time">;

    /**
     * Soft deletion timestamp for the role assignment record. When set, the
     * record is considered hidden from normal operations.
     *
     * Prisma column: community_platform_siteadmins.deleted_at.
     */
    deletedAt?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Computed convenience flag indicating whether the admin assignment is
     * currently active.
     *
     * Derived by checking that revokedAt is null and deletedAt is null. Not
     * stored in the database.
     */
    isActive?: boolean | undefined;
  };
}
