import { tags } from "typia";

import { IECommunityPlatformCommunityCategory } from "./IECommunityPlatformCommunityCategory";
import { ICommunityPlatformCommunityRuleArray } from "./ICommunityPlatformCommunityRuleArray";
import { IECommunityCategory } from "./IECommunityCategory";
import { IECommunitySort } from "./IECommunitySort";
import { ICommunityPlatformCommunityRule } from "./ICommunityPlatformCommunityRule";

/**
 * Community entity based on Prisma Communities.community_platform_communities
 * with derived presentation fields.
 *
 * This response DTO focuses on public-facing metadata, omitting internal
 * references like community_platform_user_id and soft-deletion timestamps. It
 * surfaces derived values such as memberCount, isMember, and isOwner where
 * relevant, and may include a short ordered list of rules to support the right
 * sidebar. All timestamps are ISO-8601 (UTC).
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformCommunity = {
  /**
   * Community identifier (Communities.community_platform_communities.id).
   *
   * Opaque UUID used internally and in administrative contexts. Public flows
   * primarily address communities by name.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Immutable community name
   * (Communities.community_platform_communities.name).
   *
   * Used in URLs (/c/[name]) and as the primary display label.
   * Case-insensitive uniqueness is enforced in the database via name_key.
   */
  name: string;

  /**
   * Community category (Communities.community_platform_communities.category).
   *
   * Although stored as text, the API enforces a fixed allowed set defined by
   * business rules. Values must match IECommunityPlatformCommunityCategory
   * exactly.
   */
  category: IECommunityPlatformCommunityCategory;

  /**
   * Optional community description
   * (Communities.community_platform_communities.description).
   *
   * Displayed on Community Home and in search/explore cards.
   */
  description?: (string & tags.MaxLength<500>) | undefined;

  /**
   * Logo image URI (Communities.community_platform_communities.logo_uri).
   *
   * Clients should provide a resolvable URI. The application supplies
   * defaults when absent.
   */
  logoUri?: (string & tags.MaxLength<80000> & tags.Format<"uri">) | undefined;

  /**
   * Banner image URI (Communities.community_platform_communities.banner_uri).
   *
   * Shown on the community header when present; defaults handled by the
   * application.
   */
  bannerUri?: (string & tags.MaxLength<80000> & tags.Format<"uri">) | undefined;

  /**
   * Creation timestamp
   * (Communities.community_platform_communities.created_at).
   *
   * Supports deterministic Newest ordering and relative time display.
   */
  createdAt: string & tags.Format<"date-time">;

  /**
   * Last update timestamp
   * (Communities.community_platform_communities.updated_at).
   *
   * Updated when mutable metadata changes (description, branding, category).
   */
  updatedAt: string & tags.Format<"date-time">;

  /**
   * Optional community last active timestamp
   * (Communities.community_platform_communities.last_active_at).
   *
   * Updated by posting, commenting, or other qualifying activity; used for
   * info boxes and discovery sorting.
   */
  lastActiveAt?: (string & tags.Format<"date-time">) | undefined;

  /**
   * Derived count of active members for display.
   *
   * Computed from Memberships.community_platform_community_members where
   * deleted_at is null for the community. Exposed to support Explore, Search,
   * and Community Home cards.
   */
  memberCount?: (number & tags.Type<"int32"> & tags.Minimum<0>) | undefined;

  /**
   * Whether the current authenticated user is a member of this community.
   *
   * Derived from community_platform_community_members for the caller’s user
   * id. Omitted for unauthenticated requests.
   */
  isMember?: boolean | undefined;

  /**
   * Whether the current authenticated user is the creator/owner of this
   * community.
   *
   * Derived by comparing the caller’s user id to
   * Communities.community_platform_communities.community_platform_user_id.
   * Omitted for unauthenticated requests.
   */
  isOwner?: boolean | undefined;

  /**
   * Optional rule items for the "Community Rules" box.
   *
   * Many responses include only the top 5 by order; complete lists can be
   * obtained via the rules listing API. Soft-deleted rules (deleted_at not
   * null) are excluded.
   */
  rules?: ICommunityPlatformCommunityRuleArray | undefined;
};
export namespace ICommunityPlatformCommunity {
  /**
   * Community collection/search request DTO used by Explore and Search flows.
   *
   * Backed by the Prisma model Communities.community_platform_communities for
   * filtering and ordering (via created_at and id) while enforcing Name Match
   * ranking at the business layer. Public-read; results exclude communities
   * where deleted_at is set. Reserved-name and immutability rules apply at
   * creation, not here.
   */
  export type IRequest = {
    /**
     * Normalized query string for community search.
     *
     * Minimum length 2 after normalization (trim, case-insensitive,
     * diacritics-insensitive; hyphen/underscore treated as token
     * separators). Optional for Explore listings where search may be
     * absent.
     */
    q?: (string & tags.MinLength<2>) | undefined;

    /**
     * Optional category filter limiting results to a single allowed value.
     *
     * Maps to Communities.community_platform_communities.category.
     */
    category?: IECommunityCategory | undefined;

    /**
     * Sorting mode for this request.
     *
     * - Explore contexts typically use recentlyCreated.
     * - Search contexts default to nameMatch (with recentlyCreated as an
     *   alternative).
     */
    sort?: IECommunitySort | undefined;

    /**
     * Opaque continuation token for cursor-based pagination.
     *
     * Encodes the active sort’s boundary tuple (e.g., created_at and id) to
     * provide deterministic continuation without duplicates or omissions.
     */
    cursor?: string | undefined;

    /**
     * Maximum number of items to return (default 20). Business rules
     * recommend 20 per page for lists.
     *
     * The service may enforce an upper bound (e.g., 100) to protect
     * stability.
     */
    limit?:
      | (number &
          tags.Type<"int32"> &
          tags.Default<20> &
          tags.Minimum<1> &
          tags.Maximum<100>)
      | undefined;
  };

  /**
   * Create DTO for Communities.community_platform_communities.
   *
   * Security-first design: ownership is derived from the authenticated
   * context (community_platform_user_id is never accepted from clients).
   * System-managed fields (id, created_at, updated_at, deleted_at) are
   * excluded. The API enforces name immutability, category selection from a
   * fixed set, and minimal validation to keep flows smooth.
   */
  export type ICreate = {
    /**
     * Immutable community name
     * (Communities.community_platform_communities.name) used in URLs and
     * display.
     *
     * Business rules: alphanumeric with hyphen/underscore allowed; must
     * start/end with alphanumeric; no consecutive separators; length 3–30;
     * case-insensitive uniqueness enforced via name_key at the database
     * layer. Reserved names (e.g., "c", "s", "login", "submit", "create",
     * "admin") must be rejected by the application.
     */
    name: string &
      tags.MinLength<3> &
      tags.MaxLength<30> &
      tags.Pattern<"^[A-Za-z0-9](?:[A-Za-z0-9_-]{1,28}[A-Za-z0-9])?$">;

    /**
     * Single required category as defined by business rules.
     *
     * Stored as String in
     * Communities.community_platform_communities.category; the API enforces
     * this fixed set.
     */
    category: IECommunityCategory;

    /**
     * Optional short description
     * (Communities.community_platform_communities.description).
     *
     * Displayed in Community Info and search cards; UIs commonly truncate
     * to two lines.
     */
    description?: (string & tags.MaxLength<500>) | undefined;

    /**
     * Optional logo image URI
     * (Communities.community_platform_communities.logo_uri).
     *
     * Defaults are handled by the application when absent.
     */
    logoUri?: (string & tags.MaxLength<80000> & tags.Format<"uri">) | undefined;

    /**
     * Optional banner image URI
     * (Communities.community_platform_communities.banner_uri).
     *
     * Defaults are handled by the application when absent.
     */
    bannerUri?:
      | (string & tags.MaxLength<80000> & tags.Format<"uri">)
      | undefined;

    /**
     * Optional initial rules to create for the community.
     *
     * Each item follows ICommunityPlatformCommunityRule.ICreate semantics
     * (text ≤ ~100 chars, order starts at 1). Note: Many implementations
     * prefer a dedicated rules API; providing initial rules here is
     * optional.
     */
    rules?: ICommunityPlatformCommunityRule.ICreateArray | undefined;
  };

  /**
   * Community metadata update payload.
   *
   * Only mutable fields of Communities.community_platform_communities can be
   * edited by this DTO: description, logo_uri, banner_uri, and category. The
   * immutable identifier fields (name and name_key) are excluded by design,
   * and system-managed timestamps (created_at, updated_at, last_active_at) or
   * soft-delete flags (deleted_at) are not accepted here.
   *
   * Security: Only the creator (community_platform_user_id) or a site
   * administrator may perform this update according to ownership rules.
   */
  export type IUpdate = {
    /**
     * Short community description used in the Community Info + Rules box
     * and discovery snippets.
     *
     * Prisma mapping:
     * Communities.community_platform_communities.description (nullable
     * text). Business rule caps this field to ≤ 500 characters for concise
     * presentation. Clients may omit this property when not changing the
     * description.
     */
    description?: (string & tags.MaxLength<500>) | undefined;

    /**
     * Optional logo image URI for the community header and cards.
     *
     * Prisma mapping: Communities.community_platform_communities.logo_uri
     * (nullable varchar(80000)). This API accepts a string URI; the
     * application handles defaults or fallbacks when absent.
     */
    logoUri?: (string & tags.MaxLength<80000> & tags.Format<"uri">) | undefined;

    /**
     * Optional banner image URI for the community page header.
     *
     * Prisma mapping: Communities.community_platform_communities.banner_uri
     * (nullable varchar(80000)). This API accepts a string URI; the
     * application handles defaults when not provided.
     */
    bannerUri?:
      | (string & tags.MaxLength<80000> & tags.Format<"uri">)
      | undefined;

    /**
     * Single selected category from the fixed set.
     *
     * Prisma mapping: Communities.community_platform_communities.category
     * (text). Only values enumerated in
     * IECommunityPlatformCommunityCategory are permitted.
     */
    category?: IECommunityPlatformCommunityCategory | undefined;
  };

  /**
   * Community summary card DTO.
   *
   * Compact representation of a sub‑community from Prisma model
   * community_platform_communities. Surfaces immutable name, category,
   * optional branding/description, and a derived memberCount for card/list
   * displays.
   *
   * Avoids internal or sensitive fields and follows business naming/format
   * rules.
   */
  export type ISummary = {
    /**
     * Primary key of the community.
     *
     * Prisma: community_platform_communities.id
     */
    id: string & tags.Format<"uuid">;

    /**
     * Immutable display/URL name of the community. Case-insensitive
     * uniqueness is enforced via name_key.
     *
     * Prisma: community_platform_communities.name (application maintains
     * name_key).
     */
    name: string &
      tags.MinLength<3> &
      tags.MaxLength<30> &
      tags.Pattern<"^[A-Za-z0-9](?:[A-Za-z0-9_-]{1,28}[A-Za-z0-9])?$">;

    /**
     * Community category constrained by business rules.
     *
     * Prisma: community_platform_communities.category (stored as text).
     */
    category: IECommunityCategory;

    /**
     * Optional short description used on cards and right-sidebar info.
     *
     * Prisma: community_platform_communities.description (≤ 500 chars by
     * business rules).
     */
    description?: (string & tags.MaxLength<500>) | null | undefined;

    /**
     * Optional logo image URI for branding in headers/cards.
     *
     * Prisma: community_platform_communities.logo_uri.
     */
    logoUrl?: (string & tags.Format<"uri">) | null | undefined;

    /**
     * Computed count of distinct active members for this community.
     *
     * Derived from community_platform_community_members where deleted_at is
     * null. Not stored in communities table.
     */
    memberCount: number & tags.Type<"int32"> & tags.Minimum<0>;

    /**
     * Community creation timestamp used for Newest ordering and audit.
     *
     * Prisma: community_platform_communities.created_at.
     */
    createdAt: string & tags.Format<"date-time">;

    /**
     * Optional timestamp reflecting recent community activity.
     *
     * Prisma: community_platform_communities.last_active_at.
     */
    lastActiveAt?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Minimal, safe-to-expose community view for embedding inside other DTOs.
   *
   * This schema intentionally avoids disclosing internal identifiers or
   * system-managed fields. It maps to Prisma model
   * "community_platform_communities" and is suitable for cards and nested
   * references.
   */
  export type IBasic = {
    /**
     * Immutable community name used in URLs and display.
     *
     * Maps to Prisma "community_platform_communities.name" (with
     * case-insensitive uniqueness enforced via name_key).
     */
    name: string &
      tags.MinLength<3> &
      tags.MaxLength<30> &
      tags.Pattern<"^[A-Za-z0-9](?:[A-Za-z0-9_-]{1,28}[A-Za-z0-9])?$">;

    /**
     * Optional logo URL for the community header/card.
     *
     * Maps to Prisma "community_platform_communities.logo_uri". Clients may
     * fall back to a default image when null.
     */
    logoUrl?: (string & tags.MaxLength<80000>) | null | undefined;
  };

  /**
   * Minimal community reference containing only the immutable name.
   *
   * Backed by Communities.community_platform_communities; suitable for
   * embedding within other DTOs (e.g., post mini-cards).
   */
  export type IRef = {
    /**
     * Immutable community name used in URLs and display.
     *
     * Maps to Communities.community_platform_communities.name. Business
     * rules enforce alphanumeric with optional hyphen/underscore, 3–30
     * chars, starting/ending alphanumeric, and no consecutive separators.
     * Case-insensitive uniqueness is enforced via name_key at the database
     * layer.
     */
    name: string &
      tags.MinLength<3> &
      tags.MaxLength<30> &
      tags.Pattern<"^[A-Za-z0-9](?:[A-Za-z0-9_-]{1,28}[A-Za-z0-9])?$">;
  };

  /**
   * Lightweight reference to a community based on
   * Communities.community_platform_communities.
   *
   * Intended for embedding within other DTOs (e.g., comment/post summaries)
   * without loading full community details.
   */
  export type IReference = {
    /**
     * Immutable community name used for routing and display
     * (community_platform_communities.name).
     *
     * Case-insensitive uniqueness is enforced via name_key at the database
     * layer; name itself is immutable per business rules.
     */
    name: string &
      tags.MinLength<3> &
      tags.MaxLength<30> &
      tags.Pattern<"^[A-Za-z0-9](?:[A-Za-z0-9_-]{1,28}[A-Za-z0-9])?$">;

    /**
     * Optional logo URI (community_platform_communities.logo_uri).
     *
     * Clients may show a default image when null; value is a URI string.
     */
    logoUrl?: string | null | undefined;
  };
}
