import { tags } from "typia";

import { IEVoteState } from "./IEVoteState";

/**
 * Outcome payload after changing a vote on a post.
 *
 * This response provides the target post id, the recalculated score (upvotes −
 * downvotes), and the caller’s effective vote state. It reflects authoritative
 * server state following an update or clear operation on Prisma model
 * community_platform_post_votes.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformPostVoteOutcome = {
  /**
   * Identifier of the post whose vote outcome is returned.
   *
   * Prisma source: community_platform_posts.id.
   */
  postId: string & tags.Format<"uuid">;

  /**
   * Updated post score computed as upvotes minus downvotes.
   *
   * Derived at read time from community_platform_post_votes by summing value
   * where value ∈ {-1, 1} and deleted_at is null.
   */
  score: number & tags.Type<"int32">;

  /**
   * The caller’s current vote state after the operation. One of NONE, UPVOTE,
   * or DOWNVOTE.
   *
   * State is computed from community_platform_post_votes for the (post, user)
   * pair.
   */
  myVote: IEVoteState;
};
