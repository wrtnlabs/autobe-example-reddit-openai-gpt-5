import { tags } from "typia";

import { IECommunityPlatformAdminActionOrderBy } from "./IECommunityPlatformAdminActionOrderBy";
import { IESortDirection } from "./IESortDirection";

/**
 * Administrative action snapshot entity mirrored from Prisma model
 * community_platform_admin_actions.
 *
 * Captures immutable audit details about policy enforcement events, including
 * the performing administrator, optional target resources, canonical action
 * key, contextual metadata, and lifecycle timestamps. Designed for read
 * operations in admin consoles and investigative tooling, with no exposure of
 * authentication secrets.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformAdminAction = {
  /**
   * Unique identifier of the administrative action record.
   *
   * Backed by community_platform_admin_actions.id (UUID primary key).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Administrator user who performed the action.
   *
   * Maps to community_platform_admin_actions.actor_user_id referencing
   * community_platform_users.id.
   */
  actor_user_id: string & tags.Format<"uuid">;

  /**
   * Optional target community id.
   *
   * Corresponds to community_platform_admin_actions.target_community_id
   * referencing community_platform_communities.id.
   */
  target_community_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Optional target post id.
   *
   * Corresponds to community_platform_admin_actions.target_post_id
   * referencing community_platform_posts.id.
   */
  target_post_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Optional target comment id.
   *
   * Corresponds to community_platform_admin_actions.target_comment_id
   * referencing community_platform_comments.id.
   */
  target_comment_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Canonical action key describing the policy operation performed (e.g.,
   * "disable_community", "delete_post", "remove_comment").
   *
   * Backed by community_platform_admin_actions.action. Used for
   * classification and analytics.
   */
  action: string;

  /**
   * Optional free-text reason or policy note explaining the action context.
   *
   * Maps to community_platform_admin_actions.reason.
   */
  reason?: string | null | undefined;

  /**
   * Optional IP address observed for the actor’s session at action time.
   *
   * Backed by community_platform_admin_actions.ip. Stored as string without
   * strict IP validation to preserve original format.
   */
  ip?: string | null | undefined;

  /**
   * Optional user agent string observed for the actor’s session at action
   * time.
   *
   * Backed by community_platform_admin_actions.user_agent.
   */
  user_agent?: string | null | undefined;

  /**
   * Timestamp when the admin action snapshot was recorded (UTC, ISO 8601).
   *
   * Maps to community_platform_admin_actions.created_at.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Administrative timestamp for the snapshot record (UTC, ISO 8601).
   *
   * Maps to community_platform_admin_actions.updated_at.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp when the entry was logically removed from active
   * views.
   *
   * Prisma: community_platform_admin_actions.deleted_at (nullable).
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ICommunityPlatformAdminAction {
  /**
   * Administrative list request for community_platform_admin_actions.
   *
   * Provides pagination, filtering by actor/targets/action keys, free-text
   * search, and ordering controls. Intended for systemAdmin-only access per
   * platform security requirements. Actor identity is taken from the
   * authenticated context; this filter is used only for investigative
   * queries, not for asserting actor identity.
   */
  export type IRequest = {
    /** Page number for pagination (>= 1). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Maximum number of records per page (>= 1). */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /**
     * Filter by administrator actor
     * (community_platform_admin_actions.actor_user_id).
     */
    actor_user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Filter by target community
     * (community_platform_admin_actions.target_community_id).
     */
    target_community_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Filter by target post
     * (community_platform_admin_actions.target_post_id).
     */
    target_post_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Filter by target comment
     * (community_platform_admin_actions.target_comment_id).
     */
    target_comment_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Filter by a set of canonical action keys (e.g., ["disable_community",
     * "delete_post"]).
     */
    actions?: string[] | null | undefined;

    /**
     * Free-text search across reason and client metadata
     * (implementation-defined), aiding investigative triage.
     */
    search?: string | null | undefined;

    /** Sort field; defaults to created_at. */
    orderBy?: IECommunityPlatformAdminActionOrderBy | null | undefined;

    /** Sort direction; defaults to desc. */
    direction?: IESortDirection | null | undefined;

    /** Created_at lower bound (UTC, ISO 8601). */
    from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Created_at upper bound (UTC, ISO 8601). */
    to?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Administrative action summary for audit and policy review lists.
   *
   * Based on Prisma model community_platform_admin_actions. Provides minimal,
   * high-signal fields for index views and omits sensitive transport metadata
   * (ip, user_agent). Targets are optional depending on the action type.
   *
   * Security: Administrator-only surfaces typically consume this schema;
   * nevertheless, no secrets or credential hashes are included.
   */
  export type ISummary = {
    /**
     * Primary key of the administrative action.
     *
     * Maps to Prisma column community_platform_admin_actions.id (UUID).
     */
    id: string & tags.Format<"uuid">;

    /**
     * Canonical action identifier (e.g., "disable_community",
     * "delete_post", "remove_comment").
     *
     * Maps to Prisma column community_platform_admin_actions.action.
     */
    action: string;

    /**
     * Administrator user identifier who performed the action.
     *
     * Maps to Prisma column community_platform_admin_actions.actor_user_id
     * (UUID).
     */
    actor_user_id: string & tags.Format<"uuid">;

    /**
     * Optional target community identifier.
     *
     * Maps to Prisma column
     * community_platform_admin_actions.target_community_id (nullable
     * UUID).
     */
    target_community_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Optional target post identifier.
     *
     * Maps to Prisma column community_platform_admin_actions.target_post_id
     * (nullable UUID).
     */
    target_post_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Optional target comment identifier.
     *
     * Maps to Prisma column
     * community_platform_admin_actions.target_comment_id (nullable UUID).
     */
    target_comment_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Optional free-text reason or notes describing policy context.
     *
     * Maps to Prisma column community_platform_admin_actions.reason
     * (nullable).
     */
    reason?: string | null | undefined;

    /**
     * Creation timestamp when the admin action snapshot was recorded (UTC).
     *
     * Maps to Prisma column community_platform_admin_actions.created_at
     * (timestamptz).
     */
    created_at: string & tags.Format<"date-time">;
  };
}
