import { tags } from "typia";

import { ICommunityPlatformCommunity } from "./ICommunityPlatformCommunity";
import { ICommunityPlatformUser } from "./ICommunityPlatformUser";
import { IECommunityPlatformVoteState } from "./IECommunityPlatformVoteState";
import { IEPostSort } from "./IEPostSort";
import { ICommunityRef } from "./ICommunityRef";
import { IUserRef } from "./IUserRef";
import { IEVoteState } from "./IEVoteState";

/**
 * Full post representation suitable for Post Detail views and rich cards.
 *
 * Primary source: Prisma table community_platform_posts with relations to
 * communities (container) and users (author). Sensitive fields are excluded by
 * design. Computed values like score and commentCount are included for
 * deterministic sorting and display.
 *
 * Security: Ownership (for subsequent edits/deletes) is enforced server-side
 * using the authenticated session and the post’s author relation; this DTO does
 * not expose modifiable ownership fields.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformPost = {
  /**
   * Unique identifier of the post.
   *
   * Prisma: community_platform_posts.id (UUID).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Community where the post was created, shown in cards and detail views.
   *
   * Resolved from Prisma relation
   * community_platform_posts.community_platform_community_id →
   * community_platform_communities. Name is immutable at application layer.
   */
  community: ICommunityPlatformCommunity.IBasic;

  /**
   * Post title (plain text). 5–120 characters inclusive.
   *
   * Prisma: community_platform_posts.title.
   */
  title: string & tags.MinLength<5> & tags.MaxLength<120>;

  /**
   * Post body (plain text with line breaks; no executable code). 10–10,000
   * characters inclusive.
   *
   * Prisma: community_platform_posts.body.
   */
  body: string & tags.MinLength<10> & tags.MaxLength<10000>;

  /**
   * Author label for display and ownership checks.
   *
   * Derived from Prisma relation
   * community_platform_posts.community_platform_user_id →
   * community_platform_users.
   */
  author: ICommunityPlatformUser.IAuthorLabel;

  /**
   * Creation timestamp (ISO-8601 UTC) used for Newest ordering and relative
   * time.
   *
   * Prisma: community_platform_posts.created_at.
   */
  createdAt: string & tags.Format<"date-time">;

  /**
   * Last update timestamp (ISO-8601 UTC).
   *
   * Prisma: community_platform_posts.updated_at.
   */
  updatedAt: string & tags.Format<"date-time">;

  /**
   * Computed score = upvotes − downvotes.
   *
   * Derived from aggregating rows in Prisma community_platform_post_votes
   * where value ∈ {1, -1} and deleted_at is null. Not stored in posts table.
   */
  score: number & tags.Type<"int32">;

  /**
   * Visible comment count for the post.
   *
   * Derived from rows in Prisma community_platform_comments where
   * community_platform_post_id matches and deleted_at is null.
   */
  commentCount: number & tags.Type<"int32"> & tags.Minimum<0>;

  /**
   * Caller’s current vote state on this post or null when unauthenticated or
   * no vote exists.
   *
   * Backed by Prisma community_platform_post_votes for (post, current user).
   */
  myVote?: IECommunityPlatformVoteState | null | undefined;
};
export namespace ICommunityPlatformPost {
  /**
   * Standard request model for listing/searching post summaries.
   *
   * Backed by Posts.community_platform_posts with optional joins to
   * post_votes (for Top scoring) and comments (for visible comment counts).
   * Applies deterministic sorting and cursor-based pagination. All timestamps
   * are ISO-8601 UTC strings in responses.
   */
  export type IRequest = {
    /**
     * Optional normalized search query for posts. Matches against
     * title/body when used by search endpoints.
     *
     * Business rule: queries shorter than 2 characters are rejected.
     * Ignored when the endpoint context does not support text search (e.g.,
     * simple feeds).
     */
    q?: (string & tags.MinLength<2>) | undefined;

    /**
     * Sort mode for listing posts.
     *
     * - Newest: created_at DESC, id DESC tie-breaker
     * - Top: score DESC (votes up − votes down), then created_at DESC, then
     *   id DESC
     *
     * Defaults to newest when not specified.
     */
    sort?: IEPostSort | undefined;

    /**
     * Opaque cursor for deterministic continuation. Encodes the active sort
     * tuple (e.g., created_at/id for Newest; score/created_at/id for Top).
     * Do not interpret on the client; treat as an opaque string.
     */
    cursor?: string | undefined;

    /**
     * Maximum number of items to return. Defaults to 20 per business rules
     * for feeds and search.
     */
    limit?:
      | (number &
          tags.Type<"int32"> &
          tags.Default<20> &
          tags.Minimum<1> &
          tags.Maximum<100>)
      | undefined;
  };

  /**
   * Request body for creating a text-only post in a specific community.
   *
   * Security: The author is taken from the authenticated session context and
   * persisted to Prisma
   * "community_platform_posts.community_platform_user_id". The request body
   * must not accept or infer author IDs from client input. Timestamps are set
   * by the server.
   */
  export type ICreate = {
    /**
     * Immutable display/URL name of the target community. Case-insensitive
     * at persistence via normalized key.
     *
     * Application resolves to Prisma
     * "community_platform_communities.name_key". Business validation:
     * alphanumeric with hyphen/underscore, 3–30 chars, starts/ends
     * alphanumeric, no consecutive separators, not reserved.
     */
    communityName: string &
      tags.MinLength<3> &
      tags.MaxLength<30> &
      tags.Pattern<"^[A-Za-z0-9](?:[A-Za-z0-9_-]{1,28}[A-Za-z0-9])?$">;

    /**
     * Post title (plain text). Business constraints: 5–120 characters
     * inclusive.
     *
     * Maps to Prisma "community_platform_posts.title".
     */
    title: string & tags.MinLength<5> & tags.MaxLength<120>;

    /**
     * Post body (plain text with line breaks; scripts/code prohibited).
     * Business constraints: 10–10,000 characters inclusive.
     *
     * Maps to Prisma "community_platform_posts.body".
     */
    body: string & tags.MinLength<10> & tags.MaxLength<10000>;

    /**
     * Optional author display name override (0–32 chars). When null or
     * empty, clients may show a default such as "Anonymous".
     *
     * Maps to Prisma "community_platform_posts.author_display_name".
     */
    authorDisplayName?:
      | (string & tags.MinLength<0> & tags.MaxLength<32>)
      | null
      | undefined;
  };

  /**
   * Update DTO for editing a text-only post’s mutable fields.
   *
   * This request body mirrors the editable columns of the Prisma model
   * Posts.community_platform_posts: title, body, and optional
   * author_display_name. It intentionally excludes immutable or
   * system-managed fields such as id, community reference, author reference,
   * created_at, updated_at, and deleted_at.
   *
   * Security and ownership: Only the post’s author (or site administrator via
   * policy) may use this DTO in update operations. Ownership is enforced at
   * the business/service layer, not by this schema.
   */
  export type IUpdate = {
    /**
     * Post title to update.
     *
     * Maps to community_platform_posts.title in the Prisma schema. Business
     * rules require 5–120 characters and plain text only; executable
     * content is prohibited. Edits affect only presentation and do not
     * change ownership or community associations.
     */
    title?: (string & tags.MinLength<5> & tags.MaxLength<120>) | undefined;

    /**
     * Post body content to update (plain text with line breaks allowed).
     *
     * Maps to community_platform_posts.body in the Prisma schema. Business
     * rules require 10–10,000 characters and prohibit scripts or executable
     * markup. Preserve line breaks and neutralize markup semantics at
     * display time.
     */
    body?: (string & tags.MinLength<10> & tags.MaxLength<10000>) | undefined;

    /**
     * Optional author display name shown on cards/details.
     *
     * Corresponds to community_platform_posts.author_display_name. Business
     * rules allow 0–32 characters. If null or empty, clients may render a
     * default such as "Anonymous".
     */
    authorDisplayName?:
      | (string & tags.MinLength<0> & tags.MaxLength<32>)
      | null
      | undefined;
  };

  /**
   * Container for the fixed-size "Global Latest" list of posts.
   *
   * Derived from Prisma model Posts.community_platform_posts with
   * deterministic Newest ordering (created_at DESC, id DESC). Always returns
   * exactly 10 items and has no pagination.
   */
  export type IGlobalLatest = {
    /**
     * Exactly 10 newest post mini-cards sitewide, ordered by Newest
     * (created_at DESC, id DESC).
     *
     * Each item is a minimal representation suitable for the Home right
     * sidebar "Global Latest" module.
     */
    data: ICommunityPlatformPost.IPostMini[] &
      tags.MinItems<10> &
      tags.MaxItems<10>;
  };

  /**
   * Minimal post representation for compact lists (e.g., Global Latest).
   *
   * Provides the essential fields needed to render a single-line title with
   * time and community name, without heavy relations or aggregates.
   */
  export type IPostMini = {
    /**
     * Unique identifier of the post.
     *
     * Maps to community_platform_posts.id (UUID primary key). Used for
     * navigation to Post Detail.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Minimal community identity containing the immutable community name
     * for URL and display.
     *
     * Maps to
     * Posts.community_platform_posts.community_platform_community_id →
     * Communities.community_platform_communities.
     */
    community: ICommunityPlatformCommunity.IRef;

    /**
     * Post title.
     *
     * Sourced from community_platform_posts.title. Business constraints:
     * 5–120 characters, plain text.
     */
    title: string & tags.MinLength<5> & tags.MaxLength<120>;

    /**
     * Creation timestamp of the post in ISO-8601 UTC.
     *
     * Sourced from community_platform_posts.created_at and used for Newest
     * ordering and relative time displays.
     */
    createdAt: string & tags.Format<"date-time">;
  };

  /**
   * Post summary (card) DTO.
   *
   * A compact representation of a text‑only post based on the Prisma model
   * “community_platform_posts.” It includes the community and author
   * mini‑refs, title, creation time, and derived aggregates such as
   * commentCount and score for list rendering.
   *
   * This summary intentionally excludes large text bodies and any
   * sensitive/internal fields, focusing on efficient rendering in feeds,
   * community lists, and search results.
   */
  export type ISummary = {
    /**
     * Primary key of the post.
     *
     * Prisma table: community_platform_posts.id.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Minimal community reference for card displays.
     *
     * Derived from community_platform_posts.community_platform_community_id
     * → community_platform_communities.
     */
    community: ICommunityRef.ISummary;

    /**
     * Post title in plain text (5–120 chars).
     *
     * Prisma column: community_platform_posts.title.
     */
    title: string & tags.MinLength<5> & tags.MaxLength<120>;

    /**
     * Minimal author reference with safe, public-facing fields only.
     *
     * Derived from community_platform_posts.community_platform_user_id →
     * community_platform_users.
     */
    author: IUserRef.ISummary;

    /**
     * Creation timestamp for Newest ordering and relative time.
     *
     * Prisma column: community_platform_posts.created_at.
     */
    createdAt: string & tags.Format<"date-time">;

    /**
     * Visible comment count for the post (excludes soft-deleted comments by
     * business rules).
     *
     * Derived from community_platform_comments (deleted_at is null).
     */
    commentCount: number & tags.Type<"int32"> & tags.Minimum<0>;

    /**
     * Score computed as upvotes − downvotes.
     *
     * Derived from community_platform_post_votes by summing value where
     * deleted_at is null.
     */
    score: number & tags.Type<"int32">;

    /**
     * The caller’s current vote state on this post when authenticated; null
     * when unauthenticated or not applicable.
     *
     * Derived from community_platform_post_votes for the (post, user) pair;
     * not persisted on the post.
     */
    myVote?: IEVoteState | null | undefined;
  };

  /**
   * Lightweight reference view of a Post sourced from Prisma model
   * Posts.community_platform_posts.
   *
   * This type intentionally includes only essential identification and
   * display fields (id, title) for embedding within other DTOs (e.g., comment
   * summaries or search results) without incurring full post payload
   * overhead. The id property corresponds to community_platform_posts.id
   * (UUID). The title property corresponds to community_platform_posts.title
   * and follows business constraints for title length as described in product
   * requirements.
   */
  export type IReference = {
    /**
     * Primary key of the post in Prisma table
     * Posts.community_platform_posts.id.
     *
     * This UUID uniquely identifies a post record and is used for
     * navigation (e.g., GET /communityPlatform/posts/{postId}) and as part
     * of deterministic ordering tie-breakers alongside created timestamps
     * when applicable.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Post title mapped to Prisma column community_platform_posts.title.
     *
     * Business validation requires 5–120 characters of plain text. UI
     * surfaces treat this as a short, display-friendly label shown in cards
     * and detail views; executable content is not permitted, and markup
     * semantics should not be interpreted at render time.
     */
    title: string & tags.MinLength<5> & tags.MaxLength<120>;
  };
}
