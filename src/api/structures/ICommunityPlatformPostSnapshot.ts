import { tags } from "typia";

import { IEPostSnapshotOrderBy } from "./IEPostSnapshotOrderBy";
import { IEOrderDirection } from "./IEOrderDirection";

/**
 * Post snapshot entity capturing historical, point-in-time versions of a post’s
 * mutable fields (title, body, author_display_name).
 *
 * This schema mirrors the Prisma model community_platform_post_snapshots. Each
 * record references the source post (community_platform_post_id) and optionally
 * an editor user (editor_user_id). It preserves edit history for auditing and
 * review. The snapshot is append-only in practice per model commentary.
 *
 * Security note: This type is safe for responses; it contains no secrets or
 * credential material. Timestamps use ISO 8601 date-time format (UTC).
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformPostSnapshot = {
  /**
   * Primary key of the post snapshot.
   *
   * Prisma column: community_platform_post_snapshots.id
   */
  id: string & tags.Format<"uuid">;

  /**
   * Identifier of the source post this snapshot belongs to.
   *
   * Prisma column:
   * community_platform_post_snapshots.community_platform_post_id
   */
  community_platform_post_id: string & tags.Format<"uuid">;

  /**
   * Optional editor user who created this snapshot if different from the
   * author.
   *
   * Prisma column: community_platform_post_snapshots.editor_user_id
   */
  editor_user_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Snapshot of the post title at the time of change.
   *
   * Business rule from PRD: titles are 5–120 characters (application-level
   * validation). The snapshot preserves whatever was saved at that time.
   *
   * Prisma column: community_platform_post_snapshots.title
   */
  title: string & tags.MinLength<5> & tags.MaxLength<120>;

  /**
   * Snapshot of the post body (plain text with line breaks only) at the time
   * of change.
   *
   * Business rule from PRD: bodies are 10–10,000 characters and plain text
   * (application-level validation). The snapshot preserves the state recorded
   * at edit time.
   *
   * Prisma column: community_platform_post_snapshots.body
   */
  body: string & tags.MinLength<10> & tags.MaxLength<10000>;

  /**
   * Snapshot of the author’s display name used for presentation at the time
   * of change.
   *
   * Business rule from PRD: 0–32 characters; empty implies display defaults
   * such as "Anonymous".
   *
   * Prisma column: community_platform_post_snapshots.author_display_name
   */
  author_display_name?: (string & tags.MaxLength<32>) | null | undefined;

  /**
   * Snapshot creation timestamp representing the point-in-time state.
   *
   * Prisma column: community_platform_post_snapshots.created_at
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Administrative last update timestamp for the snapshot record.
   *
   * Prisma column: community_platform_post_snapshots.updated_at
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp for the snapshot record. Null when active.
   *
   * Prisma column: community_platform_post_snapshots.deleted_at
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ICommunityPlatformPostSnapshot {
  /**
   * Request parameters for listing post snapshots
   * (community_platform_post_snapshots).
   *
   * Supports standard pagination (page, limit), ordering (orderBy,
   * direction), and optional created_at range filters
   * (created_from/created_to). Parent post identifier comes from the path
   * parameter and is not duplicated here.
   *
   * Security: No actor identifiers accepted; authentication context is
   * derived from middleware.
   */
  export type IRequest = {
    /**
     * Page number for pagination.
     *
     * Defaults follow platform pagination practices (first page = 1).
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Maximum number of items per page (1–200). Default commonly 20. */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<200>)
      | undefined;

    /**
     * Column to sort snapshots by. Default is created_at for chronological
     * history views.
     */
    orderBy?: IEPostSnapshotOrderBy | undefined;

    /**
     * Sort direction (ascending or descending). Default desc for
     * newest-first history.
     */
    direction?: IEOrderDirection | undefined;

    /** Filter snapshots with created_at ≥ this timestamp (UTC). Optional. */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /** Filter snapshots with created_at ≤ this timestamp (UTC). Optional. */
    created_to?: (string & tags.Format<"date-time">) | undefined;
  };
}
