import { tags } from "typia";

import { IECategorySortBy } from "./IECategorySortBy";
import { IESortDirection } from "./IESortDirection";

/**
 * Category entity representing one row from the Prisma model
 * community_platform_categories.
 *
 * This table is the canonical list of community categories used across Explore
 * and filtering surfaces. It carries a unique business key (code), a unique
 * display name (name), optional description, a UI presentation order
 * (display_order), an activation flag (active), and lifecycle timestamps.
 * Records with a non-null deleted_at are considered removed from active views
 * by business logic.
 *
 * All properties map directly to the Prisma columns documented in the schema
 * comments; no additional computed or actor fields are included.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformCategory = {
  /**
   * Primary key of the category.
   *
   * Prisma: community_platform_categories.id (UUID).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique business identifier (slug-like) for the category.
   *
   * Prisma: community_platform_categories.code. Used in URLs, filters, and as
   * a stable reference. Must be unique.
   */
  code: string;

  /**
   * Human-readable category name.
   *
   * Prisma: community_platform_categories.name. Must be unique to avoid
   * ambiguity in display.
   */
  name: string;

  /**
   * Optional detailed description of the category.
   *
   * Prisma: community_platform_categories.description (nullable).
   */
  description?: string | null | undefined;

  /**
   * Ordering hint for UI presentation.
   *
   * Prisma: community_platform_categories.display_order (Int). Lower values
   * appear earlier.
   */
  display_order: number & tags.Type<"int32">;

  /**
   * Whether this category is currently enabled for selection and display.
   *
   * Prisma: community_platform_categories.active (Boolean).
   */
  active: boolean;

  /**
   * Creation timestamp of this category record.
   *
   * Prisma: community_platform_categories.created_at (Timestamptz).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update timestamp of this category record.
   *
   * Prisma: community_platform_categories.updated_at (Timestamptz).
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp; null when not deleted.
   *
   * Prisma: community_platform_categories.deleted_at (Timestamptz, nullable).
   * Typically excluded from public listings by business rules.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ICommunityPlatformCategory {
  /**
   * Request parameters for listing/searching categories (Prisma:
   * community_platform_categories).
   *
   * Includes pagination, search, activation filter, and sorting controls.
   * Actor IDs and system-generated fields are intentionally excluded to
   * comply with security guidance. Providers should exclude rows where
   * deleted_at is not null by default.
   */
  export type IRequest = {
    /**
     * Page number for pagination (1-based).
     *
     * Defaults to page 1 when omitted.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /**
     * Maximum number of records per page.
     *
     * Typical public default is 20.
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<1000>)
      | null
      | undefined;

    /**
     * Free-text search term applied to code and name.
     *
     * Providers may use trigram or ILIKE matching on the underlying
     * columns.
     */
    search?: string | null | undefined;

    /**
     * Filter by activation state.
     *
     * When null or omitted, providers may default to active-only in public
     * contexts.
     */
    active?: boolean | null | undefined;

    /** Sort key for ordering results. See IECategorySortBy. */
    sortBy?: IECategorySortBy | null | undefined;

    /** Sort direction applied to the chosen sort key. */
    direction?: IESortDirection | null | undefined;

    /** Start of created_at filtering window (ISO 8601). */
    created_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** End of created_at filtering window (ISO 8601). */
    created_to?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Category summary for list/grid views.
   *
   * This summary schema represents the essential, public-facing fields of a
   * category from Prisma table community_platform_categories. It includes
   * stable identifiers and display-critical properties used in Explore and
   * filtering.
   *
   * Long-form text such as description is intentionally excluded from the
   * summary per interface guidelines to keep list payloads concise.
   */
  export type ISummary = {
    /**
     * Unique identifier of the category record.
     *
     * Maps to community_platform_categories.id (UUID primary key). Used as
     * the stable reference key across relationships (e.g., communities link
     * to categories by this id).
     */
    id: string & tags.Format<"uuid">;

    /**
     * Business code (slug-like) of the category.
     *
     * Corresponds to community_platform_categories.code which is unique and
     * used for URLs, filters, and stable configuration references.
     */
    code: string;

    /**
     * Human-readable category name.
     *
     * Maps to community_platform_categories.name. Must be unique to avoid
     * ambiguous labels in the platform UI and filters.
     */
    name: string;

    /**
     * Ordering hint for UI presentation.
     *
     * Reflects community_platform_categories.display_order (lower values
     * appear earlier). Enables deterministic ordering of category chips and
     * lists.
     */
    display_order: number & tags.Type<"int32">;

    /**
     * Whether the category is currently enabled for selection and display.
     *
     * Based on community_platform_categories.active. Inactive categories
     * may be hidden unless explicitly requested.
     */
    active: boolean;

    /**
     * Creation timestamp of the category (ISO 8601 date-time).
     *
     * Maps to community_platform_categories.created_at and is used for
     * audit and sorting (e.g., Recently Created).
     */
    created_at: string & tags.Format<"date-time">;
  };
}
