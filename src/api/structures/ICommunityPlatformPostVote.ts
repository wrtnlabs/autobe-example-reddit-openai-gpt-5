import { tags } from "typia";

import { IEPostVoteState } from "./IEPostVoteState";

/**
 * Post vote entity corresponding to Prisma table community_platform_post_votes.
 *
 * Each record captures a single user's current vote for a specific post. The
 * response type intentionally omits internal lifecycle fields such as
 * deleted_at from public exposure, consistent with security guidance.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformPostVote = {
  /**
   * Primary key (UUID) of the vote record.
   *
   * Prisma: community_platform_post_votes.id
   */
  id: string & tags.Format<"uuid">;

  /**
   * Target post identifier (UUID).
   *
   * Prisma: community_platform_post_votes.community_platform_post_id →
   * references community_platform_posts.id
   */
  community_platform_post_id: string & tags.Format<"uuid">;

  /**
   * Voter user's identifier (UUID).
   *
   * Prisma: community_platform_post_votes.community_platform_user_id →
   * references community_platform_users.id
   */
  community_platform_user_id: string & tags.Format<"uuid">;

  /**
   * Current voting state for this (post, user) pair.
   *
   * Prisma: community_platform_post_votes.state — recommended values are
   * lower-case "up" | "down"; the "None" state is represented by absence of a
   * row.
   */
  state: ICommunityPlatformPostVote.IState;

  /**
   * Creation timestamp of this vote record (UTC).
   *
   * Prisma: community_platform_post_votes.created_at
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update timestamp of this vote record (UTC).
   *
   * Prisma: community_platform_post_votes.updated_at
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ICommunityPlatformPostVote {
  /**
   * Set or change the caller’s vote on a post.
   *
   * Prisma: community_platform_post_votes stores one record per (user, post).
   * Security: authenticated users only; self-votes are forbidden per business
   * rules.
   */
  export type IUpdate = {
    /**
     * Desired vote state for the target post ("up" | "down"). Use DELETE to
     * clear the vote (None).
     */
    state: IEPostVoteState;
  };

  /**
   * Canonical voting state for post votes.
   *
   * This enumeration mirrors application guidance in Prisma for
   * community_platform_post_votes.state, recommending lower-case values
   * aligned with comment votes. Allowed values:
   *
   * - "up": Upvote
   * - "down": Downvote
   */
  export type IState = "up" | "down";
}
