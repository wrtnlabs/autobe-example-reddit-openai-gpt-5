import { Controller } from "@nestjs/common";
import { TypedRoute } from "@nestia/core";
import typia from "typia";
import { getcommunityPlatformGlobalLatestPosts } from "../../../providers/getcommunityPlatformGlobalLatestPosts";

import { IPageICommunityPlatformGlobalLatestPost } from "../../../api/structures/IPageICommunityPlatformGlobalLatestPost";

@Controller("/communityPlatform/globalLatestPosts")
export class CommunityplatformGloballatestpostsController {
  /**
   * Get Global Latest posts from mv_community_platform_global_latest_posts.
   *
   * Retrieve the Global Latest list from
   * mv_community_platform_global_latest_posts. The Prisma schema describes this
   * view as denormalizing display-critical fields and storing created_at for
   * ordering along with refreshed_at for cache freshness. Each row references
   * the authoritative post (community_platform_posts.id), its community
   * (community_platform_communities.id), and the author
   * (community_platform_users.id).
   *
   * Security and permissions: This is a public discovery endpoint intended for
   * the right sidebar. It returns only display-oriented, recent content; no
   * authentication is required.
   *
   * Behavior and errors: The response returns a container with up to 10 items,
   * ordered by created_at (newest first) consistent with the platformâ€™s Newest
   * definition and tie-breakers. If the view has no rows (e.g., empty system),
   * the endpoint returns an empty list without error.
   *
   * @param connection
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get()
  public async index(): Promise<IPageICommunityPlatformGlobalLatestPost.ISummary> {
    try {
      return await getcommunityPlatformGlobalLatestPosts();
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
