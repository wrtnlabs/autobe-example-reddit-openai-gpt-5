{"files":[{"filename":"schema-01-actors.prisma","namespace":"Actors","models":[{"name":"community_platform_users","description":"Core user accounts for authentication, authorship, and ownership across the platform. Stores credentials, unique identifiers, and profile basics. Sessions and all content entities in other components link to {@link community_platform_users} for authorship and access control. Case-insensitive uniqueness for email/username is enforced at the database level via normalized columns.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","description":"Email address provided by the user. Human-readable form; not used for case-insensitive uniqueness enforcement directly.","nullable":false},{"name":"email_normalized","type":"string","description":"Lowercased canonical email used to enforce case-insensitive uniqueness at the database level.","nullable":false},{"name":"username","type":"string","description":"Preferred handle shown in UIs. Human-readable form; not used for CI uniqueness directly.","nullable":false},{"name":"username_normalized","type":"string","description":"Lowercased canonical username used to enforce case-insensitive uniqueness at the database level.","nullable":false},{"name":"password_hash","type":"string","description":"Password hash for authentication. Plain passwords are never stored.","nullable":false},{"name":"display_name","type":"string","description":"Optional display name shown on posts/comments if provided; otherwise UI may render \"Anonymous\" per business rules.","nullable":true},{"name":"last_login_at","type":"datetime","description":"Timestamp of the most recent successful login, used for account analytics and security review.","nullable":true},{"name":"created_at","type":"datetime","description":"Creation timestamp for audit and ordering.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp for audit.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp. When set, the account is considered deactivated and hidden from normal operations.","nullable":true}],"uniqueIndexes":[{"fieldNames":["email_normalized"],"unique":true},{"fieldNames":["username_normalized"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["last_login_at"]}],"ginIndexes":[{"fieldName":"username"},{"fieldName":"display_name"}]},{"name":"community_platform_guestvisitors","description":"User restriction assignment table representing account-level limitations such as read-only or suspended states for a given {@link community_platform_users} account. This table does not model unauthenticated guests; instead, it records enforcement states for authenticated accounts with auditability (assigned/revoked, optional expiry, and reason).","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Restricted account's {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetField":"id"},"unique":true,"nullable":false}],"plainFields":[{"name":"restriction_type","type":"string","description":"Type of restriction applied. Expected values: \"read_only\" or \"suspended\" (future-safe for additional types).","nullable":false},{"name":"restricted_until","type":"datetime","description":"Optional expiry time for the restriction. Null means until explicitly revoked.","nullable":true},{"name":"restriction_reason","type":"string","description":"Optional human-readable reason or policy reference for the restriction.","nullable":true},{"name":"assigned_at","type":"datetime","description":"Time when the restriction was assigned.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Time when the restriction was revoked; null means currently active.","nullable":true},{"name":"created_at","type":"datetime","description":"Creation timestamp for audit and ordering.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp for audit.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for the restriction record.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["restricted_until"]}],"ginIndexes":[]},{"name":"community_platform_registeredmembers","description":"Role assignment table marking a {@link community_platform_users} account as an active registered member with write capabilities (post, comment, vote, join/leave). Serves as the canonical indicator of member state for authorization and personalization.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Member account's {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetField":"id"},"unique":true,"nullable":false}],"plainFields":[{"name":"registered_at","type":"datetime","description":"Time when the user became a registered member.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp for audit and ordering.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp for audit.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for the membership record (e.g., deactivated membership).","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"community_platform_siteadmins","description":"Role assignment table granting administrative privileges to a {@link community_platform_users} account. Records grant and optional revocation timestamps for audit and compliance.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Administrator account's {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetField":"id"},"unique":true,"nullable":false}],"plainFields":[{"name":"granted_at","type":"datetime","description":"Time when administrative privileges were granted.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Time when administrative privileges were revoked; null means currently active.","nullable":true},{"name":"created_at","type":"datetime","description":"Creation timestamp for audit and ordering.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp for audit.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for the admin assignment record.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]}]},{"filename":"schema-02-sessions.prisma","namespace":"Sessions","models":[{"name":"community_platform_sessions","description":"Authentication sessions for the community platform. Each record represents a long-lived session tied to a user account for smooth resume-after-login experiences. Sessions support auditability (created/updated/last_seen), lifecycle control (expires_at, revoked_at), and security via hashed token storage (never store plaintext). Belongs to {@link community_platform_users}. Common operations include listing a user’s sessions, revoking a specific session, and purging expired sessions. This table does not store credentials; those reside in users.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Owner account reference. Target model’s {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"hashed_token","type":"string","description":"Secure hash of the session token used to authenticate API requests. Plaintext tokens must never be stored.","nullable":false},{"name":"user_agent","type":"string","description":"User agent string reported by the client at sign-in or most recent interaction. Useful for device identification in session management UIs.","nullable":true},{"name":"ip","type":"string","description":"Last observed client IP address for this session. Stored as a string to accommodate IPv4/IPv6 textual forms.","nullable":true},{"name":"client_platform","type":"string","description":"Optional client platform hint (e.g., OS/Browser summary) for usability and security reviews.","nullable":true},{"name":"client_device","type":"string","description":"Optional device descriptor (e.g., model or device category) captured during session establishment.","nullable":true},{"name":"session_type","type":"string","description":"Optional logical type for the session (e.g., standard, admin-console) for policy or routing purposes. Application-defined values.","nullable":true},{"name":"created_at","type":"datetime","description":"Session creation timestamp. Used for relative time displays and audit trails.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last updated timestamp for this session record (e.g., metadata changes).","nullable":false},{"name":"last_seen_at","type":"datetime","description":"Timestamp of the last authenticated activity using this session. Supports long-lived session renewal logic and security review.","nullable":true},{"name":"expires_at","type":"datetime","description":"Absolute expiration timestamp for the session to satisfy longevity bounds (e.g., ≤ 90 days).","nullable":false},{"name":"revoked_at","type":"datetime","description":"Timestamp when the session was revoked. Null means currently not revoked.","nullable":true},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for retention or compliance workflows. Null means not deleted.","nullable":true}],"uniqueIndexes":[{"fieldNames":["hashed_token"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_user_id","created_at"]},{"fieldNames":["community_platform_user_id","last_seen_at"]},{"fieldNames":["revoked_at","expires_at"]},{"fieldNames":["expires_at"]},{"fieldNames":["community_platform_user_id","revoked_at","expires_at"]}],"ginIndexes":[]}]},{"filename":"schema-03-communities.prisma","namespace":"Communities","models":[{"name":"community_platform_communities","description":"Sub-community definitions with immutable unique name, single category, optional branding (logo/banner), and community description. Each community is owned by a creator account ({@link community_platform_users}) and may display a Right Sidebar \"Community Info + Rules\". This revision adds a normalized case-insensitive key (name_key) to enforce uniqueness at the database layer and clarifies safe deletion behavior for the creator reference. Category remains a text field per portability; application enforces allowed values and reserved-name rules.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Creator (owner) account's {@link community_platform_users.id}.","relation":{"name":"creator","targetModel":"community_platform_users","targetField":"id","onDelete":"Restrict"},"unique":false,"nullable":false}],"plainFields":[{"name":"name","type":"string","description":"Community's display/URL name (immutable post-creation at application layer). Formatting and reserved names are enforced by the application.","nullable":false},{"name":"name_key","type":"string","description":"Lowercased, normalized name used to enforce case-insensitive uniqueness (e.g., lower(name) with separator normalization). Must be kept in sync with name by the application.","nullable":false},{"name":"category","type":"string","description":"Single selected category for discovery. Allowed set documented by business rules; enforced at application layer.","nullable":false},{"name":"description","type":"string","description":"Short community description (≤ 500 chars). Optional; used in right sidebar and search snippets.","nullable":true},{"name":"logo_uri","type":"uri","description":"Optional logo image URI for the community header and cards. Defaults handled at application layer when absent.","nullable":true},{"name":"banner_uri","type":"uri","description":"Optional banner image URI for the community page. Defaults handled at application layer when absent.","nullable":true},{"name":"last_active_at","type":"datetime","description":"Optional last active timestamp for the community (updated on posting, commenting, or other qualifying activities). Used for info box and discovery ordering.","nullable":true},{"name":"created_at","type":"datetime","description":"Creation timestamp for auditing and Newest ordering.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp for auditing; application-managed.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for visibility control and compliance workflows. Null when active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["name_key"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at","id"]},{"fieldNames":["category","created_at"]},{"fieldNames":["last_active_at"]},{"fieldNames":["community_platform_user_id","created_at"]}],"ginIndexes":[{"fieldName":"name"},{"fieldName":"description"}]},{"name":"community_platform_community_rules","description":"Ordered short rules associated with a community. These items appear in the \"Community Rules\" section (top 5 by order) on Community Home and Post Detail. Each rule belongs to exactly one community ({@link community_platform_communities}). Text is concise (≤ ~100 chars). Rules are managed through the parent community and are not independently primary entities.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_community_id","type":"uuid","description":"Belonged community's {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"order_index","type":"int","description":"Display order within the community. Starts at 1 and increases without gaps per business rules; used to render the top 5 rules.","nullable":false},{"name":"text","type":"string","description":"Rule text content (~≤ 100 characters). Rendered as numbered list; long values may be truncated in UI.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp of the rule item.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp of the rule item.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Optional soft deletion timestamp for removal while preserving history; null when active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_community_id","order_index"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_community_id","created_at"]}],"ginIndexes":[{"fieldName":"text"}]}]},{"filename":"schema-04-memberships.prisma","namespace":"Memberships","models":[{"name":"community_platform_community_members","description":"Membership link between a {@link community_platform_users} account and a {@link community_platform_communities} sub-community. Represents whether a user has joined a community to personalize the Home feed and enable join/leave toggles. Rows are typically created on Join and removed on Leave; deleted_at can be used if soft-delete is preferred. Supports deterministic sorting and quick filtering by user or community.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Joined account’s {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetField":"id"},"unique":false,"nullable":false},{"name":"community_platform_community_id","type":"uuid","description":"Target sub-community’s {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"created_at","type":"datetime","description":"Timestamp when the membership was created (Join time). Used for relative time displays and ordering.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the membership record was last updated (e.g., reconciliation or metadata touch).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Optional soft-deletion timestamp. When set, indicates a logically removed membership while preserving audit trails.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_user_id","community_platform_community_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_user_id","created_at"]},{"fieldNames":["community_platform_community_id","created_at"]},{"fieldNames":["community_platform_community_id","deleted_at"]}],"ginIndexes":[]},{"name":"community_platform_recent_communities","description":"Per-user recent communities list used to render the Left Sidebar “Recent Communities”. Tracks the most recent activity timestamp per ({@link community_platform_users}, {@link community_platform_communities}) pair for fast retrieval of up to 5 items ordered by last_activity_at. Maintained by application signals on visit, join/leave, post, comment, or vote within the community.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Owner user’s {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetField":"id"},"unique":false,"nullable":false},{"name":"community_platform_community_id","type":"uuid","description":"Referenced community’s {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"last_activity_at","type":"datetime","description":"Most recent activity time (visit, join/leave, post, comment, or vote) for this user in this community. Drives ordering and capping to top 5 in UI.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp for this recency record.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp when activity is recorded or reconciled.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Optional soft-deletion timestamp to hide the record while preserving its history.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_user_id","community_platform_community_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_user_id","last_activity_at"]}],"ginIndexes":[]}]},{"filename":"schema-05-posts.prisma","namespace":"Posts","models":[{"name":"community_platform_posts","description":"Text-only posts authored by users within a specific community. Serves as a core content entity for Home feed, Community pages, Post Detail, and Search. Each post belongs to exactly one community and has exactly one author (a user). Title and body follow length constraints; author_display_name is optional and shown as a friendly label (defaults to \"Anonymous\" at presentation when empty). Deletion removes posts from public views; soft deletion timestamp supports operational safeguards. Relationships: community via {@link community_platform_communities}, author via {@link community_platform_users}, and votes via {@link community_platform_post_votes}. Author FK uses Restrict on delete to avoid cascading content removal when accounts are deactivated; community FK cascades to satisfy community deletion behavior.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_community_id","type":"uuid","description":"Belonged community's {@link community_platform_communities.id}. Determines the community scope for feeds and permissions.","relation":{"name":"community","targetModel":"community_platform_communities","targetField":"id","onDelete":"Cascade"},"unique":false,"nullable":false},{"name":"community_platform_user_id","type":"uuid","description":"Authoring user's {@link community_platform_users.id}. Used for ownership (edit/delete) and author guard rules.","relation":{"name":"author","targetModel":"community_platform_users","targetField":"id","onDelete":"Restrict"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Post title. Business constraints: 5–120 characters, plain text.","nullable":false},{"name":"body","type":"string","description":"Post body (plain text, line breaks allowed). Business constraints: 10–10,000 characters; executable content prohibited.","nullable":false},{"name":"author_display_name","type":"string","description":"Optional author display name shown on cards/details (0–32 chars). If empty, UI shows \"Anonymous\".","nullable":true},{"name":"created_at","type":"datetime","description":"Creation timestamp for deterministic Newest ordering and relative time display.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp for edits (title/body/display name).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. When set, post is removed from public views while preserving operational integrity.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["created_at","id"]},{"fieldNames":["community_platform_community_id","created_at","id"]},{"fieldNames":["community_platform_user_id","created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"body"}]},{"name":"community_platform_post_votes","description":"Per-user voting state for posts enabling score computation (upvote=1, downvote=-1). Each row represents a user’s current vote on a post. Enforces one vote per user per post. Managed indirectly through post interactions. Related entities: {@link community_platform_posts} and {@link community_platform_users}.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"Target post's {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts","targetField":"id"},"unique":false,"nullable":false},{"name":"community_platform_user_id","type":"uuid","description":"Voting user's {@link community_platform_users.id}.","relation":{"name":"voter","targetModel":"community_platform_users","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"value","type":"int","description":"Vote value. Allowed values are -1 for downvote and 1 for upvote. Transition to None is represented by row removal at application level.","nullable":false},{"name":"created_at","type":"datetime","description":"Vote creation timestamp for audit and ordering purposes.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp when vote value changes.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for operational safety; typically null.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_post_id","community_platform_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_post_id","created_at"]},{"fieldNames":["community_platform_user_id","created_at"]}],"ginIndexes":[]}]},{"filename":"schema-06-comments.prisma","namespace":"Comments","models":[{"name":"community_platform_comments","description":"Threaded comments for posts within the community platform. Each comment belongs to exactly one post ({@link community_platform_posts}) and one author account ({@link community_platform_users}). Supports hierarchical replies via self-referencing {@link community_platform_comments.parent_id}. Implements soft deletion using deleted_at while preserving thread continuity. Indexed for Newest ordering using (created_at, id) tuples per post and per parent, and supports text search via GIN on content.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"Target post's {@link community_platform_posts.id}. Each comment must belong to a post.","relation":{"name":"post","targetModel":"community_platform_posts","targetField":"id","onDelete":"Cascade"},"unique":false,"nullable":false},{"name":"community_platform_user_id","type":"uuid","description":"Author account's {@link community_platform_users.id}. Required for ownership and permissions.","relation":{"name":"author","targetModel":"community_platform_users","targetField":"id","onDelete":"Cascade"},"unique":false,"nullable":false},{"name":"parent_id","type":"uuid","description":"Optional parent comment's {@link community_platform_comments.id} for nested replies (adjacency list).","relation":{"name":"parent","targetModel":"community_platform_comments","targetField":"id","mappingName":"recursive","onDelete":"SetNull"},"unique":false,"nullable":true}],"plainFields":[{"name":"content","type":"string","description":"Plain text body of the comment (2–2,000 chars). Line breaks allowed; executable code prohibited. Business validation enforced at application layer.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp for the comment. Used for Newest ordering and relative time rendering.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last modification timestamp for the comment. Reflects edits after creation.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. When set, the comment body is hidden with a neutral placeholder while preserving thread position.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_post_id","created_at","id"]},{"fieldNames":["community_platform_post_id","parent_id","created_at","id"]},{"fieldNames":["parent_id","created_at","id"]},{"fieldNames":["community_platform_user_id","created_at"]}],"ginIndexes":[{"fieldName":"content"}]},{"name":"community_platform_comment_votes","description":"Per-user vote state for comments. Each row records a single effective vote by a user on a comment ({@link community_platform_comments}) with value in {-1, 1}. Enforces one vote per (user, comment) via a composite unique index. Designed as a supporting entity for scoring and ranking logic.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_comment_id","type":"uuid","description":"Target comment's {@link community_platform_comments.id}.","relation":{"name":"comment","targetModel":"community_platform_comments","targetField":"id","onDelete":"Cascade"},"unique":false,"nullable":false},{"name":"community_platform_user_id","type":"uuid","description":"Voter account's {@link community_platform_users.id}.","relation":{"name":"voter","targetModel":"community_platform_users","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"value","type":"int","description":"Vote value indicating direction. Allowed domain: 1 (upvote) or -1 (downvote). Application enforces domain and toggling to None by deleting the row.","nullable":false},{"name":"created_at","type":"datetime","description":"Vote creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last modification timestamp for the vote (e.g., when switching Upvote↔Downvote).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for audit or recovery scenarios. When set, the vote is excluded from tallies by application logic.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_user_id","community_platform_comment_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_comment_id","created_at"]},{"fieldNames":["community_platform_user_id","created_at"]}],"ginIndexes":[]}]}]}