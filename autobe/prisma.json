{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"name":"community_platform_categories","description":"Canonical list of community categories used for Explore and filtering across the platform. Managed by administrators and referenced by {@link community_platform_communities} in other components. Contains business key (code), human-readable name, and ordering/visibility controls. Downstream entities should reference this table by ID or business code; this table itself does not depend on business entities.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"code","type":"string","description":"Unique business identifier (slug-like) for the category. Used in URLs, filters, and as a stable reference in configurations.","nullable":false},{"name":"name","type":"string","description":"Human-readable category name displayed to users in listings and filters. Must be unique to avoid ambiguous display labels across the platform.","nullable":false},{"name":"description","type":"string","description":"Optional detailed description of the category for admin/reference purposes.","nullable":true},{"name":"display_order","type":"int","description":"Ordering hint for UI presentation. Lower values appear earlier.","nullable":false},{"name":"active","type":"boolean","description":"Whether this category is currently enabled for selection and display.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. Null when not deleted.","nullable":true}],"uniqueIndexes":[{"fieldNames":["code"],"unique":true},{"fieldNames":["name"],"unique":true}],"plainIndexes":[{"fieldNames":["active","display_order"]},{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"community_platform_reserved_terms","description":"Administrative list of reserved terms used to validate and block specific names or identifiers (e.g., community names, system-reserved words). Each record captures the term and its normalized variant for case-insensitive uniqueness within a specific application context (applies_to). No external dependencies; consumed by validation logic in other components.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"term","type":"string","description":"Original reserved term as entered by an administrator. Used for display and reference.","nullable":false},{"name":"term_normalized","type":"string","description":"Normalization of the term (e.g., lowercased) for case-insensitive matching. Application logic is responsible for maintaining this value.","nullable":false},{"name":"applies_to","type":"string","description":"Target context to which this reservation applies (e.g., 'community_name', 'global').","nullable":false},{"name":"reason","type":"string","description":"Optional administrative note explaining why the term is reserved.","nullable":true},{"name":"active","type":"boolean","description":"Whether the reservation is currently enforced.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. Null when not deleted.","nullable":true}],"uniqueIndexes":[{"fieldNames":["applies_to","term_normalized"],"unique":true}],"plainIndexes":[{"fieldNames":["active","applies_to"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"term"},{"fieldName":"term_normalized"}]},{"name":"community_platform_app_settings","description":"Key-value application configuration entries controlling platform behavior (e.g., feature flags, policy values). Designed for administrator management with descriptive metadata. Does not depend on business entities; other domains read from this store.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"key","type":"string","description":"Unique configuration key name. Used to retrieve the setting programmatically.","nullable":false},{"name":"value","type":"string","description":"Stored value for this setting as string. Application layer handles parsing to the appropriate type.","nullable":false},{"name":"value_type","type":"string","description":"Semantic type of the value (e.g., 'string', 'int', 'boolean', 'duration'). Used for validation and UI hints.","nullable":false},{"name":"description","type":"string","description":"Optional explanation of the setting’s purpose and expected format.","nullable":true},{"name":"active","type":"boolean","description":"Whether this setting is currently effective. Allows temporarily disabling values without deletion.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. Null when not deleted.","nullable":true}],"uniqueIndexes":[{"fieldNames":["key"],"unique":true}],"plainIndexes":[{"fieldNames":["active","created_at"]}],"ginIndexes":[{"fieldName":"description"}]}]},{"filename":"schema-02-actors.prisma","namespace":"Actors","models":[{"name":"community_platform_users","description":"Core user identity entity representing authenticated accounts in the platform. Serves as the parent for credentials, profile, and sessions. Other role assignment tables such as {@link community_platform_communitymembers} and {@link community_platform_systemadmins} reference this entity. This table is the central user record used across the system for authorship and permissions.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"username","type":"string","description":"Unique public handle used to identify the account. Used for login alternatives and search. Must be unique platform-wide.","nullable":false},{"name":"status","type":"string","description":"Account status lifecycle label (e.g., active, disabled, pending). Used by administrative controls and guard checks.","nullable":false},{"name":"last_login_at","type":"datetime","description":"Timestamp of the last successful login for this account.","nullable":true},{"name":"created_at","type":"datetime","description":"Entity creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. When set, the record is considered removed from active use.","nullable":true}],"uniqueIndexes":[{"fieldNames":["username"],"unique":true}],"plainIndexes":[{"fieldNames":["status","created_at"]},{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"community_platform_user_profiles","description":"Presentation-oriented profile information for a user, managed separately from credentials for security and normalization. One-to-one with {@link community_platform_users}. Typical fields include display name and avatar URI. Managed through user settings and not used for authentication.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Owned user’s {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetFieldName":"id"},"unique":true,"nullable":false}],"plainFields":[{"name":"display_name","type":"string","description":"Public display name shown in UI. Suggested 0–32 characters; empty is allowed and may default to a neutral label for display.","nullable":true},{"name":"bio","type":"string","description":"Optional short biography or intro text for the user profile.","nullable":true},{"name":"avatar_uri","type":"uri","description":"Optional avatar image URI for the profile.","nullable":true},{"name":"locale","type":"string","description":"Optional locale preference tag (e.g., en-US).","nullable":true},{"name":"timezone","type":"string","description":"Optional preferred IANA timezone identifier (e.g., Asia/Seoul).","nullable":true},{"name":"created_at","type":"datetime","description":"Profile creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Profile last update timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for the profile.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at","updated_at"]}],"ginIndexes":[{"fieldName":"display_name"}]},{"name":"community_platform_user_credentials","description":"Authentication credentials bound to a single user. Contains email identity and password hash. One-to-one with {@link community_platform_users}. Supports email verification and password rotation timestamps. Security-sensitive data; never stores plaintext passwords. Adds email_normalized to enforce case-insensitive uniqueness and faster lookups.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Owned user’s {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetFieldName":"id"},"unique":true,"nullable":false}],"plainFields":[{"name":"email","type":"string","description":"Login email address for the account (original casing). Must be unique platform-wide and used for communications where applicable.","nullable":false},{"name":"email_normalized","type":"string","description":"Lowercased email for case-insensitive uniqueness and lookups. Application must maintain this value in sync with email.","nullable":false},{"name":"email_verified_at","type":"datetime","description":"Timestamp when the email address was verified. Null if not verified.","nullable":true},{"name":"password_hash","type":"string","description":"BCrypt/Argon or similar password hash. Plaintext passwords must never be stored.","nullable":false},{"name":"password_updated_at","type":"datetime","description":"Timestamp when the password was last changed to support security policy checks.","nullable":true},{"name":"last_login_at","type":"datetime","description":"Timestamp of the last successful login using these credentials.","nullable":true},{"name":"created_at","type":"datetime","description":"Credentials creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Credentials last update timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for the credentials record.","nullable":true}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true},{"fieldNames":["email_normalized"],"unique":true},{"fieldNames":["community_platform_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["password_updated_at","updated_at"]}],"ginIndexes":[]},{"name":"community_platform_sessions","description":"Issued sessions for authenticated users enabling access/refresh workflows, sign-out from current/all devices, and revocation. Each session belongs to one {@link community_platform_users}. Stores token hash rather than raw token for security. Adds composite index to optimize active-session queries (by user_id, revoked_at, expires_at).","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Session owner’s {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetFieldName":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"refresh_token_hash","type":"string","description":"Hash of the refresh token associated with this session. Prevents plaintext token storage. Must be unique to avoid duplication.","nullable":false},{"name":"user_agent","type":"string","description":"Client user-agent string observed at session creation.","nullable":true},{"name":"ip","type":"string","description":"Client IP address observed at session creation.","nullable":true},{"name":"issued_at","type":"datetime","description":"Timestamp when the session was issued.","nullable":false},{"name":"expires_at","type":"datetime","description":"Timestamp when the session will expire without renewal.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Timestamp when this session was revoked (sign-out). Null if still active.","nullable":true},{"name":"created_at","type":"datetime","description":"Record creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Record last update timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for the session record.","nullable":true}],"uniqueIndexes":[{"fieldNames":["refresh_token_hash"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_user_id","created_at"]},{"fieldNames":["community_platform_user_id","expires_at"]},{"fieldNames":["community_platform_user_id","revoked_at","expires_at"]}],"ginIndexes":[]},{"name":"community_platform_guestvisitors","description":"Anonymous visitor representations used for sessionless interactions analytics and guard flows. Not tied to authenticated accounts. Provides minimal device fingerprinting context and last seen timestamps. This model is supporting and not user-managed directly.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"device_fingerprint","type":"string","description":"Optional opaque device/browser fingerprint used to correlate guest activity.","nullable":true},{"name":"user_agent","type":"string","description":"Observed user-agent string for the guest visitor.","nullable":true},{"name":"ip","type":"string","description":"Observed IP address for the guest visitor.","nullable":true},{"name":"first_seen_at","type":"datetime","description":"First observed timestamp for this guest visitor.","nullable":false},{"name":"last_seen_at","type":"datetime","description":"Most recent observed timestamp for this guest visitor.","nullable":false},{"name":"created_at","type":"datetime","description":"Record creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Record last update timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for the guest visitor record.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["first_seen_at","last_seen_at"]}],"ginIndexes":[]},{"name":"community_platform_communitymembers","description":"Role assignment table indicating that a {@link community_platform_users} holds the communityMember role. Used for permission checks, analytics, and onboarding workflows. One row per user (unique), with lifecycle timestamps for activation/suspension.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Assigned user’s {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetFieldName":"id"},"unique":true,"nullable":false}],"plainFields":[{"name":"status","type":"string","description":"Lifecycle status of the membership capability (e.g., active, suspended).","nullable":false},{"name":"since_at","type":"datetime","description":"Timestamp when the communityMember role became effective.","nullable":false},{"name":"created_at","type":"datetime","description":"Record creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Record last update timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for this role assignment.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["status","since_at"]}],"ginIndexes":[]},{"name":"community_platform_systemadmins","description":"Role assignment table indicating that a {@link community_platform_users} holds the systemAdmin role. Supports administrative governance with grant/revoke tracking and optional reason text. Enables independent management and audit of elevated privileges.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Admin user’s {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetFieldName":"id","mappingName":"community_platform_systemadmins_of_community_platform_user_id"},"unique":true,"nullable":false},{"name":"granted_by_user_id","type":"uuid","description":"Granting actor’s {@link community_platform_users.id}. Null when system-initialized.","relation":{"name":"grantedBy","targetModel":"community_platform_users","targetFieldName":"id","mappingName":"community_platform_systemadmins_of_granted_by_user_id"},"unique":false,"nullable":true}],"plainFields":[{"name":"granted_at","type":"datetime","description":"Timestamp when administrative privileges were granted.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Timestamp when administrative privileges were revoked, if applicable.","nullable":true},{"name":"reason","type":"string","description":"Optional reason or notes for the grant/revocation for audit context.","nullable":true},{"name":"created_at","type":"datetime","description":"Record creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Record last update timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for this role assignment.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["granted_by_user_id","granted_at"]},{"fieldNames":["revoked_at","updated_at"]}],"ginIndexes":[]}]},{"filename":"schema-03-communities.prisma","namespace":"Communities","models":[{"name":"community_platform_communities","description":"Primary entity representing a public sub-community (e.g., /c/ai). Stores immutable unique name, optional metadata (description, logo, banner), categorization, and lifecycle state. Owned by a user from {@link community_platform_users}. Related ordered rules are stored in {@link community_platform_community_rules}. Memberships are recorded in {@link community_platform_community_memberships}. Recent per-user activity is tracked in {@link community_platform_recent_communities}. The name is immutable after creation (enforced in application logic). \"disabled_at\" indicates a non-destructive administrative disablement (no new posts/comments, hidden from promotion surfaces).","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"Owner account's {@link community_platform_users.id}.","relation":{"name":"owner","targetModel":"community_platform_users","targetFieldName":"id","onDelete":"Restrict"},"unique":false,"nullable":false},{"name":"community_platform_category_id","type":"uuid","description":"Assigned category's {@link community_platform_categories.id}.","relation":{"name":"category","targetModel":"community_platform_categories","targetFieldName":"id","onDelete":"Restrict"},"unique":false,"nullable":false}],"plainFields":[{"name":"name","type":"string","description":"Unique community identifier (3–32 chars, letters, digits, hyphen, underscore). Must be case-insensitively unique service-wide.","nullable":false},{"name":"description","type":"string","description":"Optional human-readable description for the community.","nullable":true},{"name":"logo","type":"uri","description":"Optional logo image URI for the community.","nullable":true},{"name":"banner","type":"uri","description":"Optional banner image URI for the community.","nullable":true},{"name":"last_active_at","type":"datetime","description":"Timestamp of the most recent activity relevant to the community (post/comment/join/leave). Used for display and sorting in explore views.","nullable":false},{"name":"disabled_at","type":"datetime","description":"When set, the community is disabled by administrators; new posts/comments are blocked and the community is hidden from promotion surfaces.","nullable":true},{"name":"created_at","type":"datetime","description":"Creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. Null when active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_category_id","created_at"]},{"fieldNames":["community_platform_user_id","created_at"]}],"ginIndexes":[{"fieldName":"description"}]},{"name":"community_platform_community_rules","description":"Ordered list of short rule items authored by the community owner to set participation expectations. Each record belongs to a {@link community_platform_communities} and includes a stable order_index to control display order. Managed via community settings; not independently searched.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_community_id","type":"uuid","description":"Belonged community's {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"order_index","type":"int","description":"Display order (1-based or 0-based as defined by application). Unique per community to preserve deterministic ordering.","nullable":false},{"name":"text","type":"string","description":"Rule text content (1–200 characters). Display may truncate; stored text remains intact.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp of this rule item.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp of this rule item.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. Null when active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_community_id","order_index"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_community_id","created_at"]}],"ginIndexes":[]},{"name":"community_platform_community_memberships","description":"Junction table capturing membership between a user {@link community_platform_users} and a community {@link community_platform_communities}. Drives personalization (Home feed inclusion) and enables quick checks of join state. Each user may have at most one membership per community. Soft deletion (deleted_at) records leave time; active memberships have deleted_at = null.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_community_id","type":"uuid","description":"Joined community's {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities","targetFieldName":"id"},"unique":false,"nullable":false},{"name":"community_platform_user_id","type":"uuid","description":"Member user's {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetFieldName":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"created_at","type":"datetime","description":"Membership creation timestamp (join time).","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp (e.g., for auditing).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp (leave time). Null when active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_community_id","community_platform_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_user_id","created_at"]},{"fieldNames":["community_platform_community_id","created_at"]},{"fieldNames":["community_platform_community_id","community_platform_user_id","deleted_at"]}],"ginIndexes":[]},{"name":"community_platform_recent_communities","description":"Per-user recency tracker for communities interacted with or visited. Maintains up to 5 communities by most recent activity for each user. Supports quick rendering of the left sidebar list. Not a source of truth for membership but often correlated with {@link community_platform_community_memberships}.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_user_id","type":"uuid","description":"The user's {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetField":"id"},"unique":false,"nullable":false},{"name":"community_platform_community_id","type":"uuid","description":"Related community's {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"last_activity_at","type":"datetime","description":"Timestamp of the most recent eligible activity involving this user and community (visit, post, comment, vote, join/leave). Used to order the top-5 list.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. Null when active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_user_id","community_platform_community_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_user_id","last_activity_at"]}],"ginIndexes":[]}]},{"filename":"schema-04-posts.prisma","namespace":"Posts","models":[{"name":"community_platform_posts","description":"Primary posts authored by users within exactly one community. Each record represents a text-only post with title, body, and an optional author display name used for presentation (e.g., \"Anonymous\" when empty). Posts are independently created, searched, and moderated, forming a core content entity. Relationships: belongs to a {@link community_platform_communities} and an author {@link community_platform_users}. Voting and comment entities reference this table, and historical edits are preserved in {@link community_platform_post_snapshots}. No calculated fields (e.g., score, counts) are stored here; those are derived via queries or materialized views. Author linkage is nullable to support account closure with anonymization; on user deletion, the author reference is set to null rather than cascading content deletion.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_community_id","type":"uuid","description":"Belonged community's {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities","targetFieldName":"id"},"unique":false,"nullable":false},{"name":"author_user_id","type":"uuid","description":"Author account's {@link community_platform_users.id}. Nullable to enable anonymization on account deletion while retaining content.","relation":{"name":"author","targetModel":"community_platform_users","targetFieldName":"id","onDelete":"SetNull"},"unique":false,"nullable":true}],"plainFields":[{"name":"title","type":"string","description":"Post title shown in feeds and detail. Business constraints: length 5–120 characters enforced at application level.","nullable":false},{"name":"body","type":"string","description":"Post body as plain text with line breaks only (no scripts/code). Business constraints: length 10–10,000 characters enforced at application level.","nullable":false},{"name":"author_display_name","type":"string","description":"Optional author display name (0–32 chars). When empty, display a default such as \"Anonymous\". Stored for presentation only; does not affect authorship.","nullable":true},{"name":"created_at","type":"datetime","description":"Creation timestamp of the post (used for Newest sort and tie-breakers).","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp of the post (editing).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. Null means the post is active.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["community_platform_community_id","created_at"]},{"fieldNames":["author_user_id","created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"body"}]},{"name":"community_platform_post_votes","description":"Per-user vote state for posts. Captures a single state per (user, post) with allowed values managed at application level. Absence of a row represents the \"None\" state. To align with comment votes, the canonical values should be lower-case \"up\" | \"down\". Supports score computation (upvotes − downvotes) and the voting state machine. References {@link community_platform_posts} and {@link community_platform_users}.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"Target post's {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts","targetFieldName":"id"},"unique":false,"nullable":false},{"name":"community_platform_user_id","type":"uuid","description":"Voter account's {@link community_platform_users.id}.","relation":{"name":"voter","targetModel":"community_platform_users","targetFieldName":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"state","type":"string","description":"Canonical voting state value. Recommended values (to match comment votes): \"up\" for upvote, \"down\" for downvote. The \"None\" state is represented by absence of a record.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp of this vote record (initial state time).","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp of this vote record (when state changes).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. Null means the vote record is active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_post_id","community_platform_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_user_id","created_at"]},{"fieldNames":["community_platform_post_id","created_at"]}],"ginIndexes":[]},{"name":"community_platform_post_snapshots","description":"Historical snapshots of post content for audit/versioning. Each record captures a point-in-time state of a post’s mutable fields (title, body, author_display_name) to provide an immutable history of edits. References the source {@link community_platform_posts} and optionally an editor {@link community_platform_users}. Append-only in practice; used for audit trails and temporal analysis.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"Source post's {@link community_platform_posts.id}.","relation":{"name":"post","targetModel":"community_platform_posts","targetField":"id"},"unique":false,"nullable":false},{"name":"editor_user_id","type":"uuid","description":"Optional editor account's {@link community_platform_users.id} who created this snapshot (if different from author).","relation":{"name":"editor","targetModel":"community_platform_users","targetField":"id"},"unique":false,"nullable":true}],"plainFields":[{"name":"title","type":"string","description":"Snapshot of the post title at the time of change.","nullable":false},{"name":"body","type":"string","description":"Snapshot of the post body (plain text) at the time of change.","nullable":false},{"name":"author_display_name","type":"string","description":"Snapshot of the post's author display name at the time of change (if any).","nullable":true},{"name":"created_at","type":"datetime","description":"Snapshot creation timestamp (represents the point-in-time state).","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this snapshot metadata was last modified (rare; snapshots are effectively append-only).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for this snapshot record, if ever needed for administrative purposes.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_post_id","created_at"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"body"}]}]},{"filename":"schema-05-comments.prisma","namespace":"Comments","models":[{"name":"community_platform_comments","description":"User-authored comment entities for discussion threads. Each comment belongs to a post and may optionally reply to another comment (nested threading via self-reference). Authors can edit/delete their own comments; audit history is captured in {@link community_platform_comment_snapshots}. Votes on comments are stored in {@link community_platform_comment_votes}. Parent relation uses ON DELETE SET NULL to avoid unintended cascade deletions when hard-deleting a parent; soft deletion is the default behavior via deleted_at.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"Target post’s {@link community_platform_posts.id}. Required association that determines the comment’s container post.","relation":{"name":"post","targetModel":"community_platform_posts","targetFieldName":"id"},"unique":false,"nullable":false},{"name":"community_platform_user_id","type":"uuid","description":"Author user’s {@link community_platform_users.id}. Identifies who created the comment.","relation":{"name":"author","targetModel":"community_platform_users","targetFieldName":"id"},"unique":false,"nullable":false},{"name":"parent_id","type":"uuid","description":"Optional parent comment’s {@link community_platform_comments.id} for nested reply threading. Uses ON DELETE SET NULL to preserve child comments when a parent is hard-deleted.","relation":{"name":"parent","targetModel":"community_platform_comments","targetFieldName":"id","mappingName":"recursive","onDelete":"SetNull"},"unique":false,"nullable":true}],"plainFields":[{"name":"content","type":"string","description":"Plain-text comment body. Business constraints: 2–2,000 characters; no executable code. Stored as raw text for search and display.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp of the comment (UTC).","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp of the comment (UTC). Updated when content changes.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp (UTC). Null when the comment is active; non-null indicates removal from public view.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_post_id","created_at"]},{"fieldNames":["community_platform_user_id","created_at"]},{"fieldNames":["parent_id","created_at"]},{"fieldNames":["community_platform_post_id","parent_id","created_at"]}],"ginIndexes":[{"fieldName":"content"}]},{"name":"community_platform_comment_votes","description":"Per-user voting state for comments. Each record represents a single user’s current vote on a specific comment, enforcing one vote per (comment, user). States are stored as raw strings (e.g., \"Upvote\" or \"Downvote\"). Absence of a record represents the \"None\" state. Used to compute scores (upvotes − downvotes).","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_comment_id","type":"uuid","description":"Target comment’s {@link community_platform_comments.id}.","relation":{"name":"comment","targetModel":"community_platform_comments","targetFieldName":"id"},"unique":false,"nullable":false},{"name":"community_platform_user_id","type":"uuid","description":"Voter user’s {@link community_platform_users.id}.","relation":{"name":"user","targetModel":"community_platform_users","targetFieldName":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"state","type":"string","description":"Voting state value. Expected values enforced in application logic: \"Upvote\" or \"Downvote\". The \"None\" state is represented by absence of a record.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp of this vote record (UTC).","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp of this vote record (UTC). Changes when vote state toggles.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp (UTC). Null for active votes; non-null if logically removed.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_platform_comment_id","community_platform_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["community_platform_user_id","created_at"]},{"fieldNames":["community_platform_comment_id","created_at"]},{"fieldNames":["community_platform_comment_id","state"]}],"ginIndexes":[]},{"name":"community_platform_comment_snapshots","description":"Historical point-in-time records capturing the content state of {@link community_platform_comments}. Created whenever content changes to preserve audit trails and enable version history review. Append-only usage is typical.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_comment_id","type":"uuid","description":"The source comment’s {@link community_platform_comments.id} whose state is captured by this snapshot.","relation":{"name":"comment","targetModel":"community_platform_comments","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"content","type":"string","description":"Point-in-time plain-text content of the comment as captured by this snapshot.","nullable":false},{"name":"parent_id","type":"uuid","description":"Parent comment identifier captured at snapshot time (if any). Stored for historical accuracy without enforcing referential updates.","nullable":true},{"name":"created_at","type":"datetime","description":"Snapshot creation timestamp (UTC).","nullable":false},{"name":"updated_at","type":"datetime","description":"Administrative timestamp for this snapshot record (UTC). Typically equal to created_at as snapshots are append-only.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp if the snapshot record is ever logically removed (rare). Null in normal operation.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_platform_comment_id","created_at"]}],"ginIndexes":[]}]},{"filename":"schema-06-feeds.prisma","namespace":"Feeds","models":[{"name":"mv_community_platform_global_latest_posts","description":"Materialized view that caches the sitewide 10 most recent posts for the Global Latest sidebar. It denormalizes display-critical fields for fast read access and applies business tie-breakers primarily by creation time. Records reference the authoritative {@link community_platform_posts}, their owning {@link community_platform_communities}, and the author {@link community_platform_users}. Data is refreshed by background jobs; users do not write to this table directly.","material":true,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_platform_post_id","type":"uuid","description":"Referenced post's {@link community_platform_posts.id}. One row per post within this MV.","relation":{"name":"post","targetModel":"community_platform_posts","targetField":"id"},"unique":true,"nullable":false},{"name":"community_platform_community_id","type":"uuid","description":"Owning community's {@link community_platform_communities.id}.","relation":{"name":"community","targetModel":"community_platform_communities","targetField":"id"},"unique":false,"nullable":false},{"name":"community_platform_user_id","type":"uuid","description":"Author user's {@link community_platform_users.id}.","relation":{"name":"author","targetModel":"community_platform_users","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"created_at","type":"datetime","description":"Original post creation timestamp used for recency ordering (Newest).","nullable":false},{"name":"refreshed_at","type":"datetime","description":"Timestamp when this MV row was last refreshed/materialized.","nullable":false},{"name":"title","type":"string","description":"Denormalized post title for display on the Global Latest card.","nullable":false},{"name":"author_display_name","type":"string","description":"Denormalized author display name for presentation; may be empty or null if not provided by the author at post time.","nullable":true},{"name":"community_name","type":"string","description":"Denormalized community unique name (immutable identifier) used for display such as /c/{name}.","nullable":false},{"name":"score","type":"int","description":"Denormalized score (upvotes − downvotes) at refresh time for the referenced post.","nullable":false},{"name":"comment_count","type":"int","description":"Denormalized total number of comments at refresh time for the referenced post.","nullable":false}],"uniqueIndexes":[{"fieldNames":["community_platform_post_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at","community_platform_post_id"]},{"fieldNames":["community_platform_community_id","created_at"]}],"ginIndexes":[]}]},{"filename":"schema-07-audits.prisma","namespace":"Audits","models":[{"name":"community_platform_admin_actions","description":"Administrative actions executed by platform administrators for policy enforcement. Each record is an immutable, append-only snapshot of an action taken against a target resource. Common targets include communities, posts, and comments. The actor is the admin user who performed the action. This table enables audit and compliance reviews and incident investigations.\n\nKey relationships:\n- Actor admin user via {@link community_platform_users}\n- Optional target community via {@link community_platform_communities}\n- Optional target post via {@link community_platform_posts}\n- Optional target comment via {@link community_platform_comments}\n\nBehavioral notes:\n- Records are append-only to preserve audit integrity (snapshot stance).\n- \"action\" stores the canonical action key (e.g., \"disable_community\", \"delete_post\", \"remove_comment\").\n- Free-text \"reason\" may contain policy references or case notes.\n- onDelete configured to preserve audit records (Restrict/SetNull as appropriate).","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"actor_user_id","type":"uuid","description":"Administrator who performed the action. Target model's {@link community_platform_users.id}","relation":{"name":"actorUser","targetModel":"community_platform_users","targetField":"id","onDelete":"Restrict"},"unique":false,"nullable":false},{"name":"target_community_id","type":"uuid","description":"Target community for the action, if applicable. Target model's {@link community_platform_communities.id}","relation":{"name":"targetCommunity","targetModel":"community_platform_communities","targetField":"id","onDelete":"SetNull"},"unique":false,"nullable":true},{"name":"target_post_id","type":"uuid","description":"Target post for the action, if applicable. Target model's {@link community_platform_posts.id}","relation":{"name":"targetPost","targetModel":"community_platform_posts","targetField":"id","onDelete":"SetNull"},"unique":false,"nullable":true},{"name":"target_comment_id","type":"uuid","description":"Target comment for the action, if applicable. Target model's {@link community_platform_comments.id}","relation":{"name":"targetComment","targetModel":"community_platform_comments","targetField":"id","onDelete":"SetNull"},"unique":false,"nullable":true}],"plainFields":[{"name":"action","type":"string","description":"Canonical action identifier describing what was performed (e.g., \"disable_community\", \"delete_post\", \"remove_comment\"). Used for policy analytics and classification.","nullable":false},{"name":"reason","type":"string","description":"Free-text reason, including policy references or moderator notes explaining the action context.","nullable":true},{"name":"ip","type":"string","description":"IP address observed for the actor’s session at action time, recorded for security/audit review.","nullable":true},{"name":"user_agent","type":"string","description":"User agent string observed for the actor’s session, aiding forensic analysis.","nullable":true},{"name":"created_at","type":"datetime","description":"Creation timestamp when the admin action snapshot was recorded.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp for this record (typically same as creation; retained for consistency).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp when the entry was logically removed from active views (retained for audit retention windows).","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["actor_user_id","created_at"]},{"fieldNames":["target_community_id","created_at"]},{"fieldNames":["target_post_id","created_at"]},{"fieldNames":["target_comment_id","created_at"]},{"fieldNames":["action","created_at"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"reason"}]},{"name":"community_platform_audit_logs","description":"General-purpose audit trail capturing significant user and system events for observability and compliance. Events include joins/leaves, votes, content creation/deletion, authentication-related activities, and other domain actions. Designed as an append-only snapshot log to support investigations, analytics, and anomaly detection.\n\nKey relationships:\n- Actor user (optional) via {@link community_platform_users} for authenticated events\n- Session (optional) via {@link community_platform_sessions} for correlation\n- Guest visitor (optional) via {@link community_platform_guestvisitors} for unauthenticated events\n- Optional resource targets via {@link community_platform_communities}, {@link community_platform_posts}, {@link community_platform_comments}, {@link community_platform_community_memberships}\n\nBehavioral notes:\n- Append-only historical records (snapshot stance) with outcome flag (success) and optional details for context.\n- Polymorphic targeting is realized via nullable FKs to specific resource tables (only one is typically populated per record).\n- onDelete configured to SetNull for all optional foreign keys to preserve the audit log when targets are deleted.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"actor_user_id","type":"uuid","description":"Authenticated actor who triggered the event, if any. Target model's {@link community_platform_users.id}","relation":{"name":"actorUser","targetModel":"community_platform_users","targetField":"id","onDelete":"SetNull"},"unique":false,"nullable":true},{"name":"session_id","type":"uuid","description":"Correlated application session for the event, if tracked. Target model's {@link community_platform_sessions.id}","relation":{"name":"session","targetModel":"community_platform_sessions","targetField":"id","onDelete":"SetNull"},"unique":false,"nullable":true},{"name":"guestvisitor_id","type":"uuid","description":"Guest visitor identity for unauthenticated events, if tracked. Target model's {@link community_platform_guestvisitors.id}","relation":{"name":"guestVisitor","targetModel":"community_platform_guestvisitors","targetField":"id","onDelete":"SetNull"},"unique":false,"nullable":true},{"name":"community_id","type":"uuid","description":"Related community for the event, if applicable. Target model's {@link community_platform_communities.id}","relation":{"name":"community","targetModel":"community_platform_communities","targetField":"id","onDelete":"SetNull"},"unique":false,"nullable":true},{"name":"post_id","type":"uuid","description":"Related post for the event, if applicable. Target model's {@link community_platform_posts.id}","relation":{"name":"post","targetModel":"community_platform_posts","targetField":"id","onDelete":"SetNull"},"unique":false,"nullable":true},{"name":"comment_id","type":"uuid","description":"Related comment for the event, if applicable. Target model's {@link community_platform_comments.id}","relation":{"name":"comment","targetModel":"community_platform_comments","targetField":"id","onDelete":"SetNull"},"unique":false,"nullable":true},{"name":"membership_id","type":"uuid","description":"Related membership for join/leave or membership-related events, if applicable. Target model's {@link community_platform_community_memberships.id}","relation":{"name":"membership","targetModel":"community_platform_community_memberships","targetField":"id","onDelete":"SetNull"},"unique":false,"nullable":true}],"plainFields":[{"name":"event_type","type":"string","description":"Canonical event type key (e.g., \"join_community\", \"leave_community\", \"post_created\", \"comment_deleted\", \"vote_toggled\", \"login\", \"logout\").","nullable":false},{"name":"success","type":"boolean","description":"Whether the attempted event resulted in a successful outcome (true) or failed (false).","nullable":false},{"name":"details","type":"string","description":"Optional free-text details to provide context (e.g., validation errors, policy notes, or server messages).","nullable":true},{"name":"ip","type":"string","description":"IP address observed for the actor’s session or request, for security and forensic purposes.","nullable":true},{"name":"user_agent","type":"string","description":"User agent string observed for the client at event time, aiding analysis.","nullable":true},{"name":"created_at","type":"datetime","description":"Creation timestamp when the audit log entry was recorded.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp for this record (typically same as creation; retained for consistency).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp when the entry was logically removed from active views (retained for audit retention windows).","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["guestvisitor_id"]},{"fieldNames":["actor_user_id","created_at"]},{"fieldNames":["session_id","created_at"]},{"fieldNames":["community_id","created_at"]},{"fieldNames":["post_id","created_at"]},{"fieldNames":["comment_id","created_at"]},{"fieldNames":["membership_id","created_at"]},{"fieldNames":["event_type","created_at"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"details"}]}]}]}