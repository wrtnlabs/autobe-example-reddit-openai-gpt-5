/// Sub-community definitions with immutable unique name, single category,
/// optional branding (logo/banner), and community description. Each
/// community is owned by a creator account ({@link
/// community_platform_users}) and may display a Right Sidebar "Community
/// Info + Rules". This revision adds a normalized case-insensitive key
/// (name_key) to enforce uniqueness at the database layer and clarifies safe
/// deletion behavior for the creator reference. Category remains a text
/// field per portability; application enforces allowed values and
/// reserved-name rules.
///
/// @namespace Communities
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model community_platform_communities {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Creator (owner) account's {@link community_platform_users.id}.
  community_platform_user_id String
  
  /// Community's display/URL name (immutable post-creation at application
  /// layer). Formatting and reserved names are enforced by the application.
  name String
  
  /// Lowercased, normalized name used to enforce case-insensitive uniqueness
  /// (e.g., lower(name) with separator normalization). Must be kept in sync
  /// with name by the application.
  name_key String
  
  /// Single selected category for discovery. Allowed set documented by
  /// business rules; enforced at application layer.
  category String
  
  /// Short community description (≤ 500 chars). Optional; used in right
  /// sidebar and search snippets.
  description String?
  
  /// Optional logo image URI for the community header and cards. Defaults
  /// handled at application layer when absent.
  logo_uri String?
  
  /// Optional banner image URI for the community page. Defaults handled at
  /// application layer when absent.
  banner_uri String?
  
  /// Optional last active timestamp for the community (updated on posting,
  /// commenting, or other qualifying activities). Used for info box and
  /// discovery ordering.
  last_active_at DateTime?
  
  /// Creation timestamp for auditing and Newest ordering.
  created_at DateTime
  
  /// Last update timestamp for auditing; application-managed.
  updated_at DateTime
  
  /// Soft deletion timestamp for visibility control and compliance workflows.
  /// Null when active.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  creator community_platform_users @relation(fields: [community_platform_user_id], references: [id], onDelete: Cascade)
  
  community_platform_community_rules community_platform_community_rules[]
  community_platform_community_members community_platform_community_members[]
  community_platform_recent_communities community_platform_recent_communities[]
  community_platform_posts community_platform_posts[]
  
  @@unique([name_key])
  @@index([created_at, id])
  @@index([category, created_at])
  @@index([last_active_at])
  @@index([community_platform_user_id, created_at], map: "community_platform_communities_community_platform_user_7b817dee")
}

/// Ordered short rules associated with a community. These items appear in
/// the "Community Rules" section (top 5 by order) on Community Home and Post
/// Detail. Each rule belongs to exactly one community ({@link
/// community_platform_communities}). Text is concise (≤ ~100 chars). Rules
/// are managed through the parent community and are not independently
/// primary entities.
///
/// @namespace Communities
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model community_platform_community_rules {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Belonged community's {@link community_platform_communities.id}.
  community_platform_community_id String
  
  /// Display order within the community. Starts at 1 and increases without
  /// gaps per business rules; used to render the top 5 rules.
  order_index Int
  
  /// Rule text content (~≤ 100 characters). Rendered as numbered list; long
  /// values may be truncated in UI.
  text String
  
  /// Creation timestamp of the rule item.
  created_at DateTime
  
  /// Last update timestamp of the rule item.
  updated_at DateTime
  
  /// Optional soft deletion timestamp for removal while preserving history;
  /// null when active.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  community community_platform_communities @relation(fields: [community_platform_community_id], references: [id], onDelete: Cascade)
  
  @@unique([community_platform_community_id, order_index], map: "community_platform_community_rules_community_platform__88f3703e")
  @@index([community_platform_community_id, created_at], map: "community_platform_community_rules_community_platform__5226c2a2")
}